{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderSlot as _renderSlot, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6b3d16ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"background-modal d-flex align-center justify-center\"\n};\nconst _hoisted_2 = {\n  class: \"add-new-transaction-modal pa-3 rounded-lg\"\n};\nconst _hoisted_3 = {\n  class: \"d-flex py-2 justify-space-between\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-white\"\n}, \"Nova transação\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"inputs-container\"\n};\nconst _hoisted_6 = {\n  class: \"buttons-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$props.stateModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"nav\", _hoisted_3, [_hoisted_4, _renderSlot(_ctx.$slots, \"nav\", {}, undefined, true)]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_v_text_field, {\n    label: \"Descrição\",\n    class: \"text-white w-100 border-0 pa-2 rounded\",\n    placeholder: \"Descrição\",\n    variant: \"outlined\"\n  }), _createVNode(_component_v_text_field, {\n    label: \"Descrição\",\n    class: \"text-white w-100 border-0 pa-2 rounded\",\n    placeholder: \"Descrição\",\n    variant: \"outlined\",\n    onInput: _cache[0] || (_cache[0] = () => {})\n  })]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_v_btn, {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.addTransacao())\n  })])])])) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"AlertPopupPainel\"], {\n    statePopupPanel: $setup.statePopupPanel\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.textPopupPanel), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"statePopupPanel\"]), _createVNode($setup[\"SuccessPopupPanel\"], {\n    statePopupPanel: $setup.stateSuccessPopup\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.textSuccess), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"statePopupPanel\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","$props","stateModal","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_renderSlot","_ctx","$slots","undefined","_hoisted_5","_createVNode","_component_v_text_field","label","placeholder","variant","onInput","_cache","_hoisted_6","_component_v_btn","onClick","$event","$setup","addTransacao","statePopupPanel","textPopupPanel","stateSuccessPopup","textSuccess"],"sources":["C:\\Users\\PC\\Documents\\GitHub\\daskfinances\\src\\components\\AddTransaction\\AddTransactionModal.vue"],"sourcesContent":["<template>\r\n  <div\r\n    v-if=\"stateModal\"\r\n    class=\"background-modal d-flex align-center justify-center\"\r\n  >\r\n    <div class=\"add-new-transaction-modal pa-3 rounded-lg\">\r\n      <nav class=\"d-flex py-2 justify-space-between\">\r\n        <h1 class=\"text-white\">Nova transação</h1>\r\n        <slot name=\"nav\" />\r\n      </nav>\r\n      <div class=\"inputs-container\">\r\n        <v-text-field\r\n          label=\"Descrição\"\r\n          class=\"text-white w-100 border-0 pa-2 rounded\"\r\n          placeholder=\"Descrição\"\r\n          variant=\"outlined\"\r\n        ></v-text-field>\r\n        <v-text-field\r\n          label=\"Descrição\"\r\n          class=\"text-white w-100 border-0 pa-2 rounded\"\r\n          placeholder=\"Descrição\"\r\n          variant=\"outlined\"\r\n          @input=\"\"\r\n        ></v-text-field>\r\n      </div>\r\n      <div class=\"buttons-container\">\r\n        <v-btn @click=\"addTransacao()\"></v-btn>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <AlertPopupPainel\r\n    :statePopupPanel=\"statePopupPanel\"\r\n  >\r\n    {{ textPopupPanel }}\r\n  </AlertPopupPainel>\r\n  <SuccessPopupPanel\r\n    :statePopupPanel=\"stateSuccessPopup\"\r\n  >\r\n    {{ textSuccess }}\r\n  </SuccessPopupPanel>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { db } from '@/firebase'\r\nimport { collection, addDoc,updateDoc,onSnapshot,doc} from \"firebase/firestore\";\r\nimport AlertPopupPainel from \"@/components/Popups/PanelPopups/AlertPopupPanel.vue\";\r\nimport SuccessPopupPanel from '@/components/Popups/PanelPopups/SuccessPopupPanel.vue';\r\nimport { defineProps } from 'vue'\r\nimport { onMounted } from 'vue';\r\n\r\n// Adicionar nova transação\r\n\r\nlet nomeTransacao = ref('')\r\nlet valorTransacao = ref('')\r\nlet dataTransacao = ref('')\r\nlet tipoTransacao = ref('')\r\n\r\nconst store = useStore()\r\n\r\n/*const validadeInput = (() => {\r\n  valorTransacao.value = valorTransacao.value.replace(/[^0-9.]/g, \"\")\r\n})*/\r\n\r\nconst noSpaces = (() => {\r\n  if(\r\n     nomeTransacao.value.trim()  != '' \r\n  && valorTransacao.value.trim() != '' \r\n  && dataTransacao.value.trim()  != '' \r\n  && tipoTransacao.value.trim()  != ''\r\n  )\r\n    return true\r\n    \r\n  return false\r\n})\r\n\r\nconst addTransacao = () => {\r\n\r\n  if(noSpaces()) {\r\n    \r\n    addDoc(collection(db, \"transacoes\"), {\r\n      idUser: store.state.token.id,\r\n      nome: nomeTransacao.value,\r\n      valor: valorTransacao.value,\r\n      data: dataTransacao.value.replace(/-/g,'/'),\r\n      tipo: tipoTransacao.value,\r\n    });\r\n\r\n    const saldoDocRef = doc(db, 'saldo', idSaldoCollection.value);\r\n\r\n    if (tipoTransacao.value === \"receita\") {\r\n      updateDoc(saldoDocRef, {\r\n      saldo: saldoUser.value += parseInt(valorTransacao.value),\r\n      receita: receitaUser.value += parseInt(valorTransacao.value)\r\n      })\r\n    }else {\r\n      updateDoc(saldoDocRef, {\r\n      saldo: saldoUser.value -= parseInt(valorTransacao.value),\r\n      gasto: gastoUser.value += parseInt(valorTransacao.value)\r\n      })\r\n    }\r\n\r\n    successPopup('Transação conluída!')\r\n  }else {\r\n    alertPopupPanel('Preencha os campos!')\r\n  }\r\n}\r\n\r\nlet saldoUser = ref(0)\r\nlet receitaUser = ref(0)\r\nlet gastoUser = ref(0)\r\nlet idSaldoCollection = ref()\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"saldo\"), (snapshot) => {\r\n    snapshot.forEach((docUser) => {\r\n      if(store.state.token.id === docUser.data().idUser) {\r\n        saldoUser.value = docUser.data().saldo\r\n        receitaUser.value = docUser.data().receita\r\n        gastoUser.value = docUser.data().gasto\r\n\r\n        idSaldoCollection.value = docUser.id\r\n      }\r\n    })\r\n  });\r\n})\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\nlet stateSuccessPopup = ref(false)\r\nlet textSuccess = ref('')\r\n\r\nconst successPopup = (msg) => {\r\n  stateSuccessPopup.value = true\r\n  textSuccess.value = msg\r\n\r\n  setTimeout(() => {\r\n    stateSuccessPopup.value = false\r\n  },2000)\r\n}\r\n\r\ndefineProps({\r\n  stateModal: Boolean\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n  .background-modal {\r\n    position: fixed;\r\n    top: 60px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #17191c9b;\r\n    backdrop-filter: blur(5px);\r\n\r\n    .add-new-transaction-modal {\r\n      background-color: #25272c;\r\n      max-width: 500px;\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>"],"mappings":";;;;EAGIA,KAAK,EAAC;;;EAEDA,KAAK,EAAC;AAA2C;;EAC/CA,KAAK,EAAC;AAAmC;gEAC5CC,mBAAA,CAA0C;EAAtCD,KAAK,EAAC;AAAY,GAAC,gBAAc;;EAGlCA,KAAK,EAAC;AAAkB;;EAexBA,KAAK,EAAC;AAAmB;;;;6DAvB1BE,MAAA,CAAAC,UAAU,I,cADlBC,mBAAA,CA4BM,OA5BNC,UA4BM,GAxBJJ,mBAAA,CAuBM,OAvBNK,UAuBM,GAtBJL,mBAAA,CAGM,OAHNM,UAGM,GAFJC,UAA0C,EAC1CC,WAAA,CAAmBC,IAAA,CAAAC,MAAA,aAAAC,SAAA,Q,GAErBX,mBAAA,CAcM,OAdNY,UAcM,GAbJC,YAAA,CAKgBC,uBAAA;IAJdC,KAAK,EAAC,WAAW;IACjBhB,KAAK,EAAC,wCAAwC;IAC9CiB,WAAW,EAAC,WAAW;IACvBC,OAAO,EAAC;MAEVJ,YAAA,CAMgBC,uBAAA;IALdC,KAAK,EAAC,WAAW;IACjBhB,KAAK,EAAC,wCAAwC;IAC9CiB,WAAW,EAAC,WAAW;IACvBC,OAAO,EAAC,UAAU;IACjBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAN,QAAS;QAGbnB,mBAAA,CAEM,OAFNoB,UAEM,GADJP,YAAA,CAAuCQ,gBAAA;IAA/BC,OAAK,EAAAH,MAAA,QAAAA,MAAA,MAAAI,MAAA,IAAEC,MAAA,CAAAC,YAAY;iDAIjCZ,YAAA,CAImBW,MAAA;IAHhBE,eAAe,EAAEF,MAAA,CAAAE;EAAe;sBAEjC,MAAoB,C,kCAAjBF,MAAA,CAAAG,cAAc,iB;;;0CAEnBd,YAAA,CAIoBW,MAAA;IAHjBE,eAAe,EAAEF,MAAA,CAAAI;EAAiB;sBAEnC,MAAiB,C,kCAAdJ,MAAA,CAAAK,WAAW,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}