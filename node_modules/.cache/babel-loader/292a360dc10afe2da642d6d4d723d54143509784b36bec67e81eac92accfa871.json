{"ast":null,"code":"import { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { db } from '@/firebase';\nimport { collection, addDoc, updateDoc, onSnapshot, doc } from \"firebase/firestore\";\nimport AlertPopupPainel from \"@/components/Popups/PanelPopups/AlertPopupPanel.vue\";\nimport SuccessPopupPanel from '@/components/Popups/PanelPopups/SuccessPopupPanel.vue';\nimport { onMounted } from 'vue';\n\n// Adicionar nova transação\n\nexport default {\n  __name: 'AddTransactionModal',\n  props: {\n    stateModal: Boolean\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    let nomeTransacao = ref('');\n    let valorTransacao = ref('');\n    let dataTransacao = ref('');\n    let tipoTransacao = ref('');\n    const store = useStore();\n\n    /*const validadeInput = (() => {\r\n      valorTransacao.value = valorTransacao.value.replace(/[^0-9.]/g, \"\")\r\n    })*/\n\n    const noSpaces = () => {\n      if (nomeTransacao.value.trim() != '' && valorTransacao.value.trim() != '' && dataTransacao.value.trim() != '' && tipoTransacao.value.trim() != '') return true;\n      return false;\n    };\n    const addTransacao = () => {\n      if (noSpaces()) {\n        addDoc(collection(db, \"transacoes\"), {\n          idUser: store.state.token.id,\n          nome: nomeTransacao.value,\n          valor: valorTransacao.value,\n          data: dataTransacao.value.replace(/-/g, '/'),\n          tipo: tipoTransacao.value\n        });\n        const saldoDocRef = doc(db, 'saldo', idSaldoCollection.value);\n        if (tipoTransacao.value === \"receita\") {\n          updateDoc(saldoDocRef, {\n            saldo: saldoUser.value += parseInt(valorTransacao.value),\n            receita: receitaUser.value += parseInt(valorTransacao.value)\n          });\n        } else {\n          updateDoc(saldoDocRef, {\n            saldo: saldoUser.value -= parseInt(valorTransacao.value),\n            gasto: gastoUser.value += parseInt(valorTransacao.value)\n          });\n        }\n        successPopup('Transação conluída!');\n      } else {\n        alertPopupPanel('Preencha os campos!');\n      }\n    };\n    let saldoUser = ref(0);\n    let receitaUser = ref(0);\n    let gastoUser = ref(0);\n    let idSaldoCollection = ref();\n    onMounted(async () => {\n      onSnapshot(collection(db, \"saldo\"), snapshot => {\n        snapshot.forEach(docUser => {\n          if (store.state.token.id === docUser.data().idUser) {\n            saldoUser.value = docUser.data().saldo;\n            receitaUser.value = docUser.data().receita;\n            gastoUser.value = docUser.data().gasto;\n            idSaldoCollection.value = docUser.id;\n          }\n        });\n      });\n    });\n    let statePopupPanel = ref(false);\n    let textPopupPanel = ref('');\n    const alertPopupPanel = msg => {\n      statePopupPanel.value = true;\n      textPopupPanel.value = msg;\n      setTimeout(() => {\n        statePopupPanel.value = false;\n      }, 2000);\n    };\n    let stateSuccessPopup = ref(false);\n    let textSuccess = ref('');\n    const successPopup = msg => {\n      stateSuccessPopup.value = true;\n      textSuccess.value = msg;\n      setTimeout(() => {\n        stateSuccessPopup.value = false;\n      }, 2000);\n    };\n    const __returned__ = {\n      get nomeTransacao() {\n        return nomeTransacao;\n      },\n      set nomeTransacao(v) {\n        nomeTransacao = v;\n      },\n      get valorTransacao() {\n        return valorTransacao;\n      },\n      set valorTransacao(v) {\n        valorTransacao = v;\n      },\n      get dataTransacao() {\n        return dataTransacao;\n      },\n      set dataTransacao(v) {\n        dataTransacao = v;\n      },\n      get tipoTransacao() {\n        return tipoTransacao;\n      },\n      set tipoTransacao(v) {\n        tipoTransacao = v;\n      },\n      store,\n      noSpaces,\n      addTransacao,\n      get saldoUser() {\n        return saldoUser;\n      },\n      set saldoUser(v) {\n        saldoUser = v;\n      },\n      get receitaUser() {\n        return receitaUser;\n      },\n      set receitaUser(v) {\n        receitaUser = v;\n      },\n      get gastoUser() {\n        return gastoUser;\n      },\n      set gastoUser(v) {\n        gastoUser = v;\n      },\n      get idSaldoCollection() {\n        return idSaldoCollection;\n      },\n      set idSaldoCollection(v) {\n        idSaldoCollection = v;\n      },\n      get statePopupPanel() {\n        return statePopupPanel;\n      },\n      set statePopupPanel(v) {\n        statePopupPanel = v;\n      },\n      get textPopupPanel() {\n        return textPopupPanel;\n      },\n      set textPopupPanel(v) {\n        textPopupPanel = v;\n      },\n      alertPopupPanel,\n      get stateSuccessPopup() {\n        return stateSuccessPopup;\n      },\n      set stateSuccessPopup(v) {\n        stateSuccessPopup = v;\n      },\n      get textSuccess() {\n        return textSuccess;\n      },\n      set textSuccess(v) {\n        textSuccess = v;\n      },\n      successPopup,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get db() {\n        return db;\n      },\n      get collection() {\n        return collection;\n      },\n      get addDoc() {\n        return addDoc;\n      },\n      get updateDoc() {\n        return updateDoc;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get doc() {\n        return doc;\n      },\n      AlertPopupPainel,\n      SuccessPopupPanel,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useStore","db","collection","addDoc","updateDoc","onSnapshot","doc","AlertPopupPainel","SuccessPopupPanel","onMounted","nomeTransacao","valorTransacao","dataTransacao","tipoTransacao","store","noSpaces","value","trim","addTransacao","idUser","state","token","id","nome","valor","data","replace","tipo","saldoDocRef","idSaldoCollection","saldo","saldoUser","parseInt","receita","receitaUser","gasto","gastoUser","successPopup","alertPopupPanel","snapshot","forEach","docUser","statePopupPanel","textPopupPanel","msg","setTimeout","stateSuccessPopup","textSuccess"],"sources":["C:/Users/PC/Documents/GitHub/daskfinances/src/components/AddTransaction/AddTransactionModal.vue"],"sourcesContent":["<template>\r\n  <div\r\n    v-if=\"stateModal\"\r\n    class=\"background-modal d-flex align-center justify-center\"\r\n  >\r\n    <div class=\"add-new-transaction-modal pa-3 rounded-lg\">\r\n      <nav class=\"d-flex py-2 justify-space-between\">\r\n        <h1 class=\"text-white\">Nova transação</h1>\r\n        <slot name=\"nav\" />\r\n      </nav>\r\n      <div class=\"inputs-container\">\r\n        <v-text-field\r\n          label=\"Senha\"\r\n          class=\"text-white w-100 border-0 pa-2 rounded\"\r\n          placeholder=\"Sua senha\"\r\n          prepend-inner-icon=\"mdi-description-outline\"\r\n          variant=\"outlined\"\r\n        ></v-text-field>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <AlertPopupPainel\r\n    :statePopupPanel=\"statePopupPanel\"\r\n  >\r\n    {{ textPopupPanel }}\r\n  </AlertPopupPainel>\r\n  <SuccessPopupPanel\r\n    :statePopupPanel=\"stateSuccessPopup\"\r\n  >\r\n    {{ textSuccess }}\r\n  </SuccessPopupPanel>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { db } from '@/firebase'\r\nimport { collection, addDoc,updateDoc,onSnapshot,doc} from \"firebase/firestore\";\r\nimport AlertPopupPainel from \"@/components/Popups/PanelPopups/AlertPopupPanel.vue\";\r\nimport SuccessPopupPanel from '@/components/Popups/PanelPopups/SuccessPopupPanel.vue';\r\nimport { defineProps } from 'vue'\r\nimport { onMounted } from 'vue';\r\n\r\n// Adicionar nova transação\r\n\r\nlet nomeTransacao = ref('')\r\nlet valorTransacao = ref('')\r\nlet dataTransacao = ref('')\r\nlet tipoTransacao = ref('')\r\n\r\nconst store = useStore()\r\n\r\n/*const validadeInput = (() => {\r\n  valorTransacao.value = valorTransacao.value.replace(/[^0-9.]/g, \"\")\r\n})*/\r\n\r\nconst noSpaces = (() => {\r\n  if(\r\n     nomeTransacao.value.trim()  != '' \r\n  && valorTransacao.value.trim() != '' \r\n  && dataTransacao.value.trim()  != '' \r\n  && tipoTransacao.value.trim()  != ''\r\n  )\r\n    return true\r\n    \r\n  return false\r\n})\r\n\r\nconst addTransacao = () => {\r\n\r\n  if(noSpaces()) {\r\n    \r\n    addDoc(collection(db, \"transacoes\"), {\r\n      idUser: store.state.token.id,\r\n      nome: nomeTransacao.value,\r\n      valor: valorTransacao.value,\r\n      data: dataTransacao.value.replace(/-/g,'/'),\r\n      tipo: tipoTransacao.value,\r\n    });\r\n\r\n    const saldoDocRef = doc(db, 'saldo', idSaldoCollection.value);\r\n\r\n    if (tipoTransacao.value === \"receita\") {\r\n      updateDoc(saldoDocRef, {\r\n      saldo: saldoUser.value += parseInt(valorTransacao.value),\r\n      receita: receitaUser.value += parseInt(valorTransacao.value)\r\n      })\r\n    }else {\r\n      updateDoc(saldoDocRef, {\r\n      saldo: saldoUser.value -= parseInt(valorTransacao.value),\r\n      gasto: gastoUser.value += parseInt(valorTransacao.value)\r\n      })\r\n    }\r\n\r\n    successPopup('Transação conluída!')\r\n  }else {\r\n    alertPopupPanel('Preencha os campos!')\r\n  }\r\n}\r\n\r\nlet saldoUser = ref(0)\r\nlet receitaUser = ref(0)\r\nlet gastoUser = ref(0)\r\nlet idSaldoCollection = ref()\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"saldo\"), (snapshot) => {\r\n    snapshot.forEach((docUser) => {\r\n      if(store.state.token.id === docUser.data().idUser) {\r\n        saldoUser.value = docUser.data().saldo\r\n        receitaUser.value = docUser.data().receita\r\n        gastoUser.value = docUser.data().gasto\r\n\r\n        idSaldoCollection.value = docUser.id\r\n      }\r\n    })\r\n  });\r\n})\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\nlet stateSuccessPopup = ref(false)\r\nlet textSuccess = ref('')\r\n\r\nconst successPopup = (msg) => {\r\n  stateSuccessPopup.value = true\r\n  textSuccess.value = msg\r\n\r\n  setTimeout(() => {\r\n    stateSuccessPopup.value = false\r\n  },2000)\r\n}\r\n\r\ndefineProps({\r\n  stateModal: Boolean\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n  .background-modal {\r\n    position: fixed;\r\n    top: 60px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #17191c9b;\r\n    backdrop-filter: blur(5px);\r\n\r\n    .add-new-transaction-modal {\r\n      background-color: #25272c;\r\n      max-width: 500px;\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}