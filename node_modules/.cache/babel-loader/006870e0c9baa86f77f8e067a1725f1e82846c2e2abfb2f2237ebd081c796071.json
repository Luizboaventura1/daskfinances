{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { db } from '@/firebase';\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\nimport { useRouter } from 'vue-router';\nimport { onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport AlertPopupPanel from '@/components/Popups/PanelPopups/AlertPopupPanel.vue';\nexport default {\n  __name: 'RegistrarView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const store = useStore();\n    let AllUsers = ref([]);\n    onMounted(async () => {\n      onSnapshot(collection(db, \"usuarios\"), snapshot => {\n        snapshot.forEach(user => {\n          const obj = {\n            id: user.id,\n            nome: user.data().nome,\n            gmail: user.data().gmail,\n            senha: user.data().senha\n          };\n          AllUsers.value.push(obj);\n        });\n      });\n    });\n    let nome = ref('');\n    let gmail = ref('');\n    let senha = ref('');\n    let router = useRouter();\n    const registrarUsuario = () => {\n      let nomeValue = nome.value.trim();\n      let gmailValue = gmail.value.trim();\n      let senhaValue = senha.value.trim();\n      if (validationName.value) {\n        console.log(confirmRules());\n        console.log(nameRules.value.forEach(item => item));\n        /*let verificarSeAContaExiste = AllUsers.value.some(user => user.gmail.startsWith(gmailValue))\r\n        \r\n        if(!verificarSeAContaExiste) {\r\n          loader.value = true\r\n          setTimeout(() => {\r\n            loader.value = false\r\n            router.push('/painel')\r\n          },900)\r\n          \r\n          addDoc(collection(db, \"usuarios\"), {\r\n            nome: nomeValue,\r\n            gmail: gmailValue,\r\n            senha: senhaValue\r\n          });\r\n            store.commit('addToken',{\r\n            id: '',\r\n            nome: nomeValue,\r\n            gmail: gmailValue,\r\n            senha: senhaValue,\r\n            tokenOn: true\r\n          })\r\n          }else {\r\n          alertPopupPanel('Essa conta já existe!')\r\n        }*/\n      }\n    };\n\n    // Loader\n\n    let loader = ref(false);\n\n    // Popups\n\n    let statePopupPanel = ref(false);\n    let textPopupPanel = ref('');\n    const alertPopupPanel = msg => {\n      statePopupPanel.value = true;\n      textPopupPanel.value = msg;\n      setTimeout(() => {\n        statePopupPanel.value = false;\n      }, 2000);\n    };\n\n    // Rules login\n\n    let validationName = ref(false);\n    let validationGmail = ref(false);\n    let validationPassword = ref(false);\n    const nameRules = [value => {\n      if (value) return validationName.value = true;else validationName.value = false;\n      return 'Senha obrigatória!';\n    }, value => {\n      if (value.length >= 3) return validationName.value = true;else validationName.value = false;\n      return 'Mínimo 3 letras';\n    }, value => {\n      if (value.length <= 50) return validationName.value = true;else validationName.value = false;\n      return 'Máximo 50 caracteres!';\n    }];\n    const emailRules = [value => {\n      if (value) return validationGmail.value = true;else validationGmail.value = false;\n      return 'Email obrigatório!';\n    }, value => {\n      if (value.includes('@') && value.split('@').length == 2) return validationGmail.value = true;else validationGmail.value = false;\n      return 'Email inválido!';\n    }, value => {\n      if (value.length <= 50) return validationGmail.value = true;else validationGmail.value = false;\n      return 'Máximo 50 caracteres!';\n    }];\n    const passwordRules = [value => {\n      if (value) return validationPassword.value = true;else validationPassword.value = false;\n      return 'Senha obrigatória!';\n    }, value => {\n      if (value.length >= 8) return validationPassword.value = true;else validationPassword.value = false;\n      return 'Minimo 8 caracteres';\n    }, value => {\n      if (value.length <= 50) return validationPassword.value = true;else validationPassword.value = false;\n      return 'Máximo 50 caracteres';\n    }];\n    const confirmRules = () => {\n      if (validationName && validationGmail && validationPassword) return true;\n      return false;\n    };\n    let visiblePassword = ref();\n    const __returned__ = {\n      store,\n      get AllUsers() {\n        return AllUsers;\n      },\n      set AllUsers(v) {\n        AllUsers = v;\n      },\n      get nome() {\n        return nome;\n      },\n      set nome(v) {\n        nome = v;\n      },\n      get gmail() {\n        return gmail;\n      },\n      set gmail(v) {\n        gmail = v;\n      },\n      get senha() {\n        return senha;\n      },\n      set senha(v) {\n        senha = v;\n      },\n      get router() {\n        return router;\n      },\n      set router(v) {\n        router = v;\n      },\n      registrarUsuario,\n      get loader() {\n        return loader;\n      },\n      set loader(v) {\n        loader = v;\n      },\n      get statePopupPanel() {\n        return statePopupPanel;\n      },\n      set statePopupPanel(v) {\n        statePopupPanel = v;\n      },\n      get textPopupPanel() {\n        return textPopupPanel;\n      },\n      set textPopupPanel(v) {\n        textPopupPanel = v;\n      },\n      alertPopupPanel,\n      get validationName() {\n        return validationName;\n      },\n      set validationName(v) {\n        validationName = v;\n      },\n      get validationGmail() {\n        return validationGmail;\n      },\n      set validationGmail(v) {\n        validationGmail = v;\n      },\n      get validationPassword() {\n        return validationPassword;\n      },\n      set validationPassword(v) {\n        validationPassword = v;\n      },\n      nameRules,\n      emailRules,\n      passwordRules,\n      confirmRules,\n      get visiblePassword() {\n        return visiblePassword;\n      },\n      set visiblePassword(v) {\n        visiblePassword = v;\n      },\n      ref,\n      get db() {\n        return db;\n      },\n      get collection() {\n        return collection;\n      },\n      get addDoc() {\n        return addDoc;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      onMounted,\n      get useStore() {\n        return useStore;\n      },\n      AlertPopupPanel\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","db","collection","addDoc","onSnapshot","useRouter","onMounted","useStore","AlertPopupPanel","store","AllUsers","snapshot","forEach","user","obj","id","nome","data","gmail","senha","value","push","router","registrarUsuario","nomeValue","trim","gmailValue","senhaValue","validationName","console","log","confirmRules","nameRules","item","loader","statePopupPanel","textPopupPanel","alertPopupPanel","msg","setTimeout","validationGmail","validationPassword","length","emailRules","includes","split","passwordRules","visiblePassword"],"sources":["C:/Users/PC/Documents/GitHub/daskfinances/src/views/auth/RegistrarView.vue"],"sourcesContent":["<template>\r\n  <header class=\"d-flex justify-center align-center\">\r\n    <v-container class=\"d-flex justify-center align-center\">\r\n      <form class=\"elevation-10 rounded-lg py-3 px-4\">\r\n        <h1 class=\"text-white text-center mb-5\">Registrar</h1>\r\n\r\n        <div>\r\n          <v-text-field\r\n            required\r\n            label=\"Nome\"\r\n            v-model=\"nome\"\r\n            class=\"text-white w-100 border-0 pa-2 rounded\"\r\n            type=\"email\"\r\n            placeholder=\"Primeiro nome\"\r\n            :rules=\"nameRules\"\r\n            prepend-inner-icon=\"mdi-account-outline\"\r\n            variant=\"outlined\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <div>\r\n          <v-text-field\r\n            label=\"Email\"\r\n            required\r\n            v-model=\"gmail\"\r\n            class=\"text-white w-100 border-0 pa-2 rounded\"\r\n            type=\"email\"\r\n            placeholder=\"Seu email\"\r\n            :rules=\"emailRules\"\r\n            prepend-inner-icon=\"mdi-email-outline\"\r\n            variant=\"outlined\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <div>\r\n          <v-text-field\r\n            label=\"Senha\"\r\n            required\r\n            v-model=\"senha\"\r\n            class=\"text-white w-100 border-0 pa-2 rounded\"\r\n            placeholder=\"Sua senha\"\r\n            :rules=\"passwordRules\"\r\n            prepend-inner-icon=\"mdi-lock-outline\"\r\n            @click:append-inner=\"visiblePassword = !visiblePassword\"\r\n            :append-inner-icon=\"visiblePassword ? 'mdi-eye-off' : 'mdi-eye'\"\r\n            :type=\"visiblePassword ? 'text' : 'password'\"\r\n            variant=\"outlined\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <v-btn\r\n        :disabled=\"loader\"\r\n        :loading=\"loader\"\r\n        @click=\"registrarUsuario()\"\r\n        class=\"w-100 my-3 button-registrar\"\r\n        >Criar conta</v-btn>\r\n\r\n        <div class=\"w-100 text-center\">\r\n          <router-link\r\n          class=\"link-registrar text-decoration-none font-weight-light\"\r\n          to=\"/auth/login\">Tem uma conta?</router-link>\r\n        </div>\r\n      </form>\r\n    </v-container>\r\n  </header>\r\n\r\n  <v-dialog\r\n      v-model=\"loader\"\r\n      :scrim=\"false\"\r\n      persistent\r\n      width=\"auto\"\r\n    >\r\n      <v-card\r\n        color=\"blue-darken-1\"\r\n      >\r\n        <v-card-text>\r\n          Registrando\r\n          <v-progress-linear\r\n            indeterminate\r\n            color=\"white\"\r\n            class=\"mb-0\"\r\n          ></v-progress-linear>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-dialog>\r\n  <AlertPopupPanel\r\n    :statePopupPanel=\"statePopupPanel\"\r\n  >\r\n    {{ textPopupPanel }}\r\n  </AlertPopupPanel>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { db } from '@/firebase'\r\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\r\nimport { useRouter } from 'vue-router';\r\nimport { onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport AlertPopupPanel from '@/components/Popups/PanelPopups/AlertPopupPanel.vue';\r\n\r\n\r\nconst store = useStore()\r\n\r\nlet AllUsers = ref([])\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"usuarios\"), (snapshot) => {\r\n    snapshot.forEach((user) => {\r\n      const obj = {\r\n        id: user.id,\r\n        nome: user.data().nome,\r\n        gmail: user.data().gmail,\r\n        senha: user.data().senha\r\n      }\r\n\r\n      AllUsers.value.push(obj)\r\n    })\r\n  });\r\n})\r\n\r\nlet nome = ref('')\r\nlet gmail = ref('')\r\nlet senha = ref('')\r\n\r\nlet router = useRouter()\r\n\r\nconst registrarUsuario = () => {\r\n  let nomeValue = nome.value.trim()\r\n  let gmailValue = gmail.value.trim()\r\n  let senhaValue = senha.value.trim()\r\n\r\n  if(validationName.value) {\r\n    console.log(confirmRules())\r\n    console.log(nameRules.value.forEach(item => item))\r\n    /*let verificarSeAContaExiste = AllUsers.value.some(user => user.gmail.startsWith(gmailValue))\r\n    \r\n    if(!verificarSeAContaExiste) {\r\n      loader.value = true\r\n      setTimeout(() => {\r\n        loader.value = false\r\n        router.push('/painel')\r\n      },900)\r\n      \r\n      addDoc(collection(db, \"usuarios\"), {\r\n        nome: nomeValue,\r\n        gmail: gmailValue,\r\n        senha: senhaValue\r\n      });\r\n\r\n      store.commit('addToken',{\r\n        id: '',\r\n        nome: nomeValue,\r\n        gmail: gmailValue,\r\n        senha: senhaValue,\r\n        tokenOn: true\r\n      })\r\n\r\n    }else {\r\n      alertPopupPanel('Essa conta já existe!')\r\n    }*/\r\n  }\r\n}\r\n\r\n// Loader\r\n\r\nlet loader = ref(false)\r\n\r\n// Popups\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\n// Rules login\r\n\r\nlet validationName = ref(false)\r\nlet validationGmail = ref(false)\r\nlet validationPassword = ref(false)\r\n\r\nconst nameRules = [\r\n  value => {\r\n    if(value) \r\n      return validationName.value = true\r\n    else \r\n      validationName.value = false\r\n      return 'Senha obrigatória!'\r\n  },\r\n  value => {\r\n    if(value.length >= 3) \r\n      return validationName.value = true\r\n    else \r\n      validationName.value = false\r\n      return 'Mínimo 3 letras'\r\n  },\r\n  value => {\r\n    if(value.length <= 50) \r\n      return validationName.value = true\r\n    else \r\n      validationName.value = false\r\n      return 'Máximo 50 caracteres!'\r\n  }\r\n]\r\n\r\nconst emailRules = [\r\n  value => {\r\n    if(value)\r\n      return validationGmail.value = true\r\n    else\r\n      validationGmail.value = false\r\n      return 'Email obrigatório!'\r\n  },\r\n  value => {\r\n    if(value.includes('@') && value.split('@').length == 2)\r\n      return validationGmail.value = true\r\n    else\r\n      validationGmail.value = false\r\n      return 'Email inválido!'\r\n  },\r\n  value => {\r\n    if(value.length <= 50)\r\n      return validationGmail.value = true\r\n    else\r\n      validationGmail.value = false\r\n      return 'Máximo 50 caracteres!'\r\n  }\r\n]\r\n\r\nconst passwordRules = [\r\n  value => {\r\n    if(value)\r\n      return validationPassword.value = true\r\n    else\r\n      validationPassword.value = false\r\n      return 'Senha obrigatória!'\r\n  },\r\n  value => {\r\n    if(value.length >= 8)\r\n      return validationPassword.value = true\r\n    else\r\n    validationPassword.value = false\r\n      return 'Minimo 8 caracteres'\r\n  },\r\n  value => {\r\n    if(value.length <= 50)\r\n      return validationPassword.value = true\r\n    else\r\n    validationPassword.value = false\r\n      return 'Máximo 50 caracteres'\r\n  }\r\n]\r\n\r\nconst confirmRules = () => {\r\n  if(validationName && validationGmail && validationPassword)\r\n    return true\r\n  return false\r\n}\r\n\r\n\r\nlet visiblePassword = ref()\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n  header {\r\n    height: 100vh;\r\n    background-color: #17191c;\r\n\r\n    form {\r\n      width: 100%;\r\n      max-width: 400px;\r\n      min-height: 350px;\r\n      background-color: #25272c;\r\n\r\n      input {\r\n        outline: none;\r\n        background-color: #17191c;\r\n      }\r\n\r\n      .link-registrar {\r\n        color: #959595;\r\n        font-size: 15px;\r\n\r\n        &:hover {\r\n          color: #949494;\r\n          text-decoration: underline !important;\r\n        }\r\n      }\r\n\r\n      .button-registrar {\r\n        background-color: #00b2ff;\r\n        color: white;\r\n        box-shadow: none;\r\n\r\n        &:hover {\r\n          box-shadow: 0 0 10px #0084ff65;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}