{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db } from '@/firebase';\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'BadgeIcon',\n  props: {\n    propsBadge: String\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    let store = useStore();\n    let unread = ref(false);\n    onMounted(async () => {\n      onSnapshot(collection(db, \"notifications\"), snapshot => {\n        let notifications = [];\n        snapshot.forEach(notification => {\n          if (store.state.token.id === notification.data().idUser) {\n            notifications.push(notification);\n          }\n        });\n        unread.value = notifications.some(noti => noti.unread != true);\n      });\n    });\n    const __returned__ = {\n      get store() {\n        return store;\n      },\n      set store(v) {\n        store = v;\n      },\n      get unread() {\n        return unread;\n      },\n      set unread(v) {\n        unread = v;\n      },\n      get db() {\n        return db;\n      },\n      get collection() {\n        return collection;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      onMounted,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["db","collection","onSnapshot","onMounted","useStore","store","unread","ref","snapshot","notifications","forEach","notification","state","token","id","data","idUser","push","value","some","noti"],"sources":["C:/Users/PC/Documents/GitHub/daskfinances/src/components/Notifications/BadgeIcon.vue"],"sourcesContent":["<template>\r\n  <div class=\"badge\" v-bind=\"propsBadge\">\r\n    <div\r\n      v-if=\"unread\"\r\n      class=\"circle rounded-circle\"\r\n    ></div>\r\n    <v-img width=\"20\" src=\"../../assets/img-notification.svg\"></v-img>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { db } from '@/firebase'\r\nimport { collection, onSnapshot,} from \"firebase/firestore\";\r\nimport { onMounted } from 'vue';\r\nimport { useStore } from 'vuex'\r\nimport { defineProps } from 'vue'\r\nlet store = useStore()\r\nlet unread = ref(false)\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"notifications\"), (snapshot) => {\r\n    let notifications = []\r\n    snapshot.forEach((notification) => {\r\n      if(store.state.token.id === notification.data().idUser) {\r\n        notifications.push(notification)\r\n      }\r\n    })\r\n\r\n    unread.value = notifications.some(noti => noti.unread != true)\r\n\r\n  });\r\n})\r\n\r\ndefineProps({\r\n  propsBadge: String\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .badge {\r\n    width: 20px;\r\n    height: 20px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    .circle {\r\n      position: absolute;\r\n      width: 12px;\r\n      height: 12px;\r\n      z-index: 10;\r\n      right: -6px;\r\n      top: -6px;\r\n      background-color: rgb(199, 25, 25);\r\n    }\r\n  }\r\n</style>"],"mappings":";AAWA,SAASA,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,UAAU,QAAQ,oBAAoB;AAC3D,SAASC,SAAS,QAAQ,KAAK;AAC/B,SAASC,QAAQ,QAAQ,MAAM;;;;;;;;;;IAE/B,IAAIC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACtB,IAAIE,MAAM,GAAGC,GAAG,CAAC,KAAK,CAAC;IAEvBJ,SAAS,CAAC,YAAY;MACpBD,UAAU,CAACD,UAAU,CAACD,EAAE,EAAE,eAAe,CAAC,EAAGQ,QAAQ,IAAK;QACxD,IAAIC,aAAa,GAAG,EAAE;QACtBD,QAAQ,CAACE,OAAO,CAAEC,YAAY,IAAK;UACjC,IAAGN,KAAK,CAACO,KAAK,CAACC,KAAK,CAACC,EAAE,KAAKH,YAAY,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,EAAE;YACtDP,aAAa,CAACQ,IAAI,CAACN,YAAY,CAAC;UAClC;QACF,CAAC,CAAC;QAEFL,MAAM,CAACY,KAAK,GAAGT,aAAa,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACd,MAAM,IAAI,IAAI,CAAC;MAEhE,CAAC,CAAC;IACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}