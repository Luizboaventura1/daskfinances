{"ast":null,"code":"import NotificationIcon from '@/components/Notifications/NotificationIcon.vue';\nexport default {\n  __name: 'NewNotification',\n  props: {\n    notificationsList: Object,\n    value: Number\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    props;\n    const calculateElapsedTime = time => {\n      const notificationTime = new Date(time);\n      const currentTime = new Date();\n      const elapsedMinutes = Math.floor((currentTime - notificationTime) / (1000 * 60));\n      if (elapsedMinutes < 1) {\n        return \"Agora\";\n      } else if (elapsedMinutes < 60) {\n        return `Há ${elapsedMinutes} minutos`;\n      } else if (elapsedMinutes >= 1440) {\n        const elapsedDays = Math.floor(elapsedMinutes / 1440);\n        return elapsedDays > 1 ? `Há ${elapsedDays} dias` : `Há ${elapsedDays} dias`;\n      } else {\n        const elapsedHours = Math.floor(elapsedMinutes / 60);\n        return elapsedHours > 1 ? `Há ${elapsedHours} horas` : `Há ${elapsedHours} hora`;\n      }\n    };\n    const notificationLink = link => {\n      if (link != '/') return location.href = link;\n    };\n    const __returned__ = {\n      calculateElapsedTime,\n      notificationLink,\n      NotificationIcon\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["NotificationIcon","props","calculateElapsedTime","time","notificationTime","Date","currentTime","elapsedMinutes","Math","floor","elapsedDays","elapsedHours","notificationLink","link","location","href"],"sources":["C:/Users/PC/Documents/GitHub/daskfinances/src/components/Notifications/NewNotification.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div\r\n      v-for=\"notification in notificationsList\"\r\n      :key=\"notification\"\r\n      class=\"new-notification rounded elevation-3 mb-2 pa-2\"\r\n    >\r\n      <a\r\n        @click=\"notificationLink(notification.link)\"\r\n      >\r\n        <div class=\"top px-2 d-flex justify-space-between\">\r\n          <div class=\"d-flex\">\r\n            <div class=\"d-flex align-center justify-start\">\r\n              <NotificationIcon\r\n                :icon=\"notification.icon\"\r\n                size=\"40\"\r\n              />\r\n            </div>\r\n            <div class=\"ms-4 d-flex justify-start align-center\">\r\n              <span class=\"notification-title font-weight-bold text-white\">{{ notification.title }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"notification-date\">\r\n            <span class=\"text-white\">{{ calculateElapsedTime(notification.date) }}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"bottom px-2 d-flex align-center\">\r\n          <span class=\"notification-text text-white\">\r\n            {{ notification.text }}\r\n          </span>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport NotificationIcon from '@/components/Notifications/NotificationIcon.vue'\r\nimport { defineProps } from 'vue'\r\n\r\ndefineProps({\r\n  notificationsList: Object,\r\n  value: Number\r\n})\r\nprops\r\n\r\nconst calculateElapsedTime = (time) => {\r\n  const notificationTime = new Date(time);\r\n  const currentTime = new Date();\r\n  const elapsedMinutes = Math.floor((currentTime - notificationTime) / (1000 * 60));\r\n\r\n  if (elapsedMinutes < 1) {\r\n    return \"Agora\";\r\n  } else if (elapsedMinutes < 60) {\r\n    return `Há ${elapsedMinutes} minutos`;\r\n  }\r\n  else if (elapsedMinutes >= 1440) {\r\n    const elapsedDays = Math.floor(elapsedMinutes / 1440)\r\n    return (elapsedDays > 1) ? `Há ${elapsedDays} dias` : `Há ${elapsedDays} dias`\r\n  } else {\r\n    const elapsedHours = Math.floor(elapsedMinutes / 60);\r\n    return (elapsedHours > 1) ? `Há ${elapsedHours} horas` : `Há ${elapsedHours} hora`\r\n  }\r\n}\r\n\r\nconst notificationLink = (link) => {\r\n  if(link != '/')\r\n    return location.href = link\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .new-notification {\r\n    cursor: pointer;\r\n    height: 110px;\r\n    width: 100%;\r\n    min-width: 300px;\r\n    background-color: rgb(41, 44, 46);\r\n    transition: .3s;\r\n    &:hover {\r\n      background-color: rgb(54, 57, 60);\r\n    }\r\n\r\n    .top {\r\n      height: 35px;\r\n    }\r\n\r\n    .bottom {\r\n      height: 65px;\r\n    }\r\n  }\r\n\r\n  .notification-date {\r\n    font-size: 15px;\r\n  }\r\n</style>"],"mappings":"AAqCA,OAAOA,gBAAgB,MAAM,iDAAiD;;;;;;;;;;;IAO9EC,KAAK;IAEL,MAAMC,oBAAoB,GAAIC,IAAI,IAAK;MACrC,MAAMC,gBAAgB,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;MACvC,MAAMG,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;MAC9B,MAAME,cAAc,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,WAAW,GAAGF,gBAAgB,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC;MAEjF,IAAIG,cAAc,GAAG,CAAC,EAAE;QACtB,OAAO,OAAO;MAChB,CAAC,MAAM,IAAIA,cAAc,GAAG,EAAE,EAAE;QAC9B,OAAQ,MAAKA,cAAe,UAAS;MACvC,CAAC,MACI,IAAIA,cAAc,IAAI,IAAI,EAAE;QAC/B,MAAMG,WAAW,GAAGF,IAAI,CAACC,KAAK,CAACF,cAAc,GAAG,IAAI,CAAC;QACrD,OAAQG,WAAW,GAAG,CAAC,GAAK,MAAKA,WAAY,OAAM,GAAI,MAAKA,WAAY,OAAM;MAChF,CAAC,MAAM;QACL,MAAMC,YAAY,GAAGH,IAAI,CAACC,KAAK,CAACF,cAAc,GAAG,EAAE,CAAC;QACpD,OAAQI,YAAY,GAAG,CAAC,GAAK,MAAKA,YAAa,QAAO,GAAI,MAAKA,YAAa,OAAM;MACpF;IACF,CAAC;IAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;MACjC,IAAGA,IAAI,IAAI,GAAG,EACZ,OAAOC,QAAQ,CAACC,IAAI,GAAGF,IAAI;IAC/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}