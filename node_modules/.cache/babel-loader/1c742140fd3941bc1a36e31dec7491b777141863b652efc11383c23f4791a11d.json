{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, mergeProps as _mergeProps, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../../assets/img-notification.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-59a50c96\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"circle rounded-circle\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_img = _resolveComponent(\"v-img\");\n  return _openBlock(), _createElementBlock(\"div\", _mergeProps({\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('readNotification')),\n    class: \"badge\"\n  }, $props.propsBadge), [$setup.unread ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_img, {\n    width: \"20\",\n    src: _imports_0\n  })], 16 /* FULL_PROPS */);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_mergeProps","onClick","_cache","$event","_ctx","$emit","$props","propsBadge","$setup","unread","_hoisted_1","_createVNode","_component_v_img","width","src"],"sources":["C:\\Users\\PC\\Documents\\GitHub\\daskfinances\\src\\components\\Notifications\\BadgeIcon.vue"],"sourcesContent":["<template>\r\n  <div\r\n    @click=\"$emit('readNotification')\"\r\n    class=\"badge\" v-bind=\"propsBadge\">\r\n    <div\r\n      v-if=\"unread\"\r\n      class=\"circle rounded-circle\"\r\n    ></div>\r\n    <v-img width=\"20\" src=\"../../assets/img-notification.svg\"></v-img>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { db } from '@/firebase'\r\nimport { collection, onSnapshot,} from \"firebase/firestore\";\r\nimport { onMounted } from 'vue';\r\nimport { useStore } from 'vuex'\r\nimport { ref } from 'vue'\r\nimport { defineProps } from 'vue'\r\nlet store = useStore()\r\n\r\nlet unread = ref(false)\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"notifications\"), (snapshot) => {\r\n    let notifications = []\r\n    snapshot.forEach((notification) => {\r\n      if(store.state.token.id === notification.data().idUser) {\r\n        notifications.push(notification)\r\n      }\r\n    })\r\n    console.log(notifications.some(noti => {\r\n      if(noti.unread === 'false') {\r\n        console.log(noti.unread)\r\n      }else {\r\n        console.log(noti.unread)\r\n      }\r\n    }))\r\n\r\n  });\r\n})\r\n\r\ndefineProps({\r\n  propsBadge: String\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .badge {\r\n    width: 20px;\r\n    height: 20px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    .circle {\r\n      position: absolute;\r\n      width: 12px;\r\n      height: 12px;\r\n      z-index: 10;\r\n      right: -6px;\r\n      top: -6px;\r\n      background-color: rgb(199, 25, 25);\r\n    }\r\n  }\r\n</style>"],"mappings":";OAQsBA,UAAuC;;;;EAFvDC,KAAK,EAAC;;;;uBALVC,mBAAA,CAQM,OARNC,WAAA,CAQM;IAPHC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;IACbP,KAAK,EAAC;KAAgBQ,MAAA,CAAAC,UAAU,IAExBC,MAAA,CAAAC,MAAM,I,cADdV,mBAAA,CAGO,OAHPW,UAGO,K,mCACPC,YAAA,CAAkEC,gBAAA;IAA3DC,KAAK,EAAC,IAAI;IAACC,GAAuC,EAAvCjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}