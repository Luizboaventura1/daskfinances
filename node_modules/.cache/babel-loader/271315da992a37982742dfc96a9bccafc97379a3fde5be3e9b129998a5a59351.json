{"ast":null,"code":"import ListTransactions from '@/components/DaskTransactions/ListTransactions.vue';\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { db } from '@/firebase';\nimport { collection, addDoc, onSnapshot, updateDoc, doc } from \"firebase/firestore\";\nimport { onMounted } from 'vue';\nimport AlertPopupPainel from \"@/components/Popups/PanelPopups/AlertPopupPanel.vue\";\nimport SuccessPopupPanel from '@/components/Popups/PanelPopups/SuccessPopupPanel.vue';\n\n// Adicionar nova transação\n\nexport default {\n  __name: 'PainelView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    let nomeTransacao = ref('');\n    let valorTransacao = ref('');\n    let dataTransacao = ref('');\n    let tipoTransacao = ref('');\n    const store = useStore();\n    const validadeInput = () => {\n      valorTransacao.value = valorTransacao.value.replace(/[^0-9.]/g, \"\");\n      console.log(valorTransacao.value);\n      valorTransacao.value = valorTransacao.value.replace(/^(?!.*\\..*\\.)[\\d.]+$/, match => {\n        return match.replace(/\\.+/g, m => m === '.' ? '.' : '');\n      });\n    };\n    const addTransacao = () => {\n      if (nomeTransacao.value.trim() != '' && valorTransacao.value.trim() != '' && dataTransacao.value.trim() != '' && tipoTransacao.value.trim() != '') {\n        addDoc(collection(db, \"transacoes\"), {\n          idUser: store.state.token.id,\n          nome: nomeTransacao.value,\n          valor: valorTransacao.value,\n          data: dataTransacao.value.replace(/-/g, '/'),\n          tipo: tipoTransacao.value\n        });\n        const saldoDocRef = doc(db, 'saldo', idSaldoCollection.value);\n        if (tipoTransacao.value === \"receita\") {\n          updateDoc(saldoDocRef, {\n            saldo: saldoUser.value += parseInt(valorTransacao.value),\n            receita: receitaUser.value += parseInt(valorTransacao.value)\n          });\n        } else {\n          updateDoc(saldoDocRef, {\n            saldo: saldoUser.value -= parseInt(valorTransacao.value),\n            gasto: gastoUser.value += parseInt(valorTransacao.value)\n          });\n        }\n        successPopup('Transação conluída!');\n      } else {\n        alertPopupPanel('Preencha os campos!');\n      }\n    };\n\n    // Mostrar dados de saldo\n\n    let saldoUser = ref(0);\n    let receitaUser = ref(0);\n    let gastoUser = ref(0);\n    let idSaldoCollection = ref();\n    onMounted(async () => {\n      onSnapshot(collection(db, \"saldo\"), snapshot => {\n        snapshot.forEach(docUser => {\n          if (store.state.token.id === docUser.data().idUser) {\n            saldoUser.value = docUser.data().saldo;\n            receitaUser.value = docUser.data().receita;\n            gastoUser.value = docUser.data().gasto;\n            idSaldoCollection.value = docUser.id;\n          }\n        });\n      });\n    });\n    const formatNumber = num => {\n      return `R$ ${parseFloat(num).toFixed(2).replace('.', ',')}`;\n    };\n    let statePopupPanel = ref(false);\n    let textPopupPanel = ref('');\n    const alertPopupPanel = msg => {\n      statePopupPanel.value = true;\n      textPopupPanel.value = msg;\n      setTimeout(() => {\n        statePopupPanel.value = false;\n      }, 2000);\n    };\n    let stateSuccessPopup = ref(false);\n    let textSuccess = ref('');\n    const successPopup = msg => {\n      stateSuccessPopup.value = true;\n      textSuccess.value = msg;\n      setTimeout(() => {\n        stateSuccessPopup.value = false;\n      }, 2000);\n    };\n    const __returned__ = {\n      get nomeTransacao() {\n        return nomeTransacao;\n      },\n      set nomeTransacao(v) {\n        nomeTransacao = v;\n      },\n      get valorTransacao() {\n        return valorTransacao;\n      },\n      set valorTransacao(v) {\n        valorTransacao = v;\n      },\n      get dataTransacao() {\n        return dataTransacao;\n      },\n      set dataTransacao(v) {\n        dataTransacao = v;\n      },\n      get tipoTransacao() {\n        return tipoTransacao;\n      },\n      set tipoTransacao(v) {\n        tipoTransacao = v;\n      },\n      store,\n      validadeInput,\n      addTransacao,\n      get saldoUser() {\n        return saldoUser;\n      },\n      set saldoUser(v) {\n        saldoUser = v;\n      },\n      get receitaUser() {\n        return receitaUser;\n      },\n      set receitaUser(v) {\n        receitaUser = v;\n      },\n      get gastoUser() {\n        return gastoUser;\n      },\n      set gastoUser(v) {\n        gastoUser = v;\n      },\n      get idSaldoCollection() {\n        return idSaldoCollection;\n      },\n      set idSaldoCollection(v) {\n        idSaldoCollection = v;\n      },\n      formatNumber,\n      get statePopupPanel() {\n        return statePopupPanel;\n      },\n      set statePopupPanel(v) {\n        statePopupPanel = v;\n      },\n      get textPopupPanel() {\n        return textPopupPanel;\n      },\n      set textPopupPanel(v) {\n        textPopupPanel = v;\n      },\n      alertPopupPanel,\n      get stateSuccessPopup() {\n        return stateSuccessPopup;\n      },\n      set stateSuccessPopup(v) {\n        stateSuccessPopup = v;\n      },\n      get textSuccess() {\n        return textSuccess;\n      },\n      set textSuccess(v) {\n        textSuccess = v;\n      },\n      successPopup,\n      ListTransactions,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get db() {\n        return db;\n      },\n      get collection() {\n        return collection;\n      },\n      get addDoc() {\n        return addDoc;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get updateDoc() {\n        return updateDoc;\n      },\n      get doc() {\n        return doc;\n      },\n      onMounted,\n      AlertPopupPainel,\n      SuccessPopupPanel\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ListTransactions","ref","useStore","db","collection","addDoc","onSnapshot","updateDoc","doc","onMounted","AlertPopupPainel","SuccessPopupPanel","nomeTransacao","valorTransacao","dataTransacao","tipoTransacao","store","validadeInput","value","replace","console","log","match","m","addTransacao","trim","idUser","state","token","id","nome","valor","data","tipo","saldoDocRef","idSaldoCollection","saldo","saldoUser","parseInt","receita","receitaUser","gasto","gastoUser","successPopup","alertPopupPanel","snapshot","forEach","docUser","formatNumber","num","parseFloat","toFixed","statePopupPanel","textPopupPanel","msg","setTimeout","stateSuccessPopup","textSuccess"],"sources":["C:/Users/PC/OneDrive/Documentos/back/src/views/master/PainelView.vue"],"sourcesContent":["<template>\r\n  <v-row class=\"container-saldo-conta w-100\">\r\n    <v-col cols=\"12\" sm=\"4\">\r\n      <div class=\"saldo elevation-6 rounded-lg pa-2 d-flex ma-3\">\r\n        <span class=\"text-white font-weight-bold\">Saldo</span>\r\n        <div class=\"font-weight-regular text-green-accent-3 text-h6 w-100 align-self-end text-right\">\r\n          {{ formatNumber(saldoUser) }}\r\n        </div>\r\n      </div>\r\n    </v-col>\r\n    <v-col cols=\"12\" sm=\"4\">\r\n      <div class=\"receitas elevation-6 rounded-lg pa-2 d-flex ma-3\">\r\n        <span class=\"text-white font-weight-bold\">Receitas</span>\r\n        <div class=\"font-weight-regular text-blue text-h6 w-100 align-self-end text-right\">\r\n          {{ formatNumber(receitaUser) }}\r\n        </div>\r\n      </div>\r\n    </v-col>\r\n    <v-col cols=\"12\" sm=\"4\">\r\n      <div class=\"gastos elevation-6 rounded-lg pa-2 d-flex ma-3\">\r\n        <span class=\"text-white font-weight-bold\">Gastos</span>\r\n        <div class=\"font-weight-regular text-red-accent-3 text-h6 w-100 align-self-end text-right\">\r\n          {{ formatNumber(gastoUser) }}\r\n        </div>\r\n      </div>\r\n    </v-col>\r\n  </v-row>\r\n  <div class=\"container-add-finance pa-3 rounded ma-3 elevation-6\">\r\n    <div class=\"w-100\">\r\n      <h1 class=\"text-white text-h6 font-weight-bold\">Nova transação</h1>\r\n    </div>\r\n    <v-row class=\"py-3\">\r\n      <v-col\r\n        cols=\"12\"\r\n        sm=\"6\"\r\n        md=\"3\"\r\n      >\r\n        <input\r\n          v-model=\"nomeTransacao\"\r\n          placeholder=\"Transação\"\r\n          type=\"text\"\r\n          class=\"rounded-md text-white px-3 py-2 w-100\">\r\n      </v-col>\r\n      <v-col\r\n        cols=\"12\"\r\n        sm=\"6\"\r\n        md=\"3\"\r\n      >\r\n        <input\r\n          v-model=\"valorTransacao\"\r\n          placeholder=\"Valor\"\r\n          type=\"text\"\r\n          class=\"rounded-md text-white px-3 py-2 w-100\"\r\n          @input=\"validadeInput\"\r\n        >\r\n      </v-col>\r\n      <v-col\r\n        cols=\"12\"\r\n        sm=\"6\"\r\n        md=\"3\"\r\n      >\r\n        <input\r\n          v-model=\"dataTransacao\"\r\n          placeholder=\"Data\"\r\n          type=\"date\"\r\n          class=\"rounded-md text-white px-3 py-2 w-100\">\r\n      </v-col>\r\n      <v-col\r\n        cols=\"12\"\r\n        sm=\"6\"\r\n        md=\"3\"\r\n      >\r\n        <select v-model=\"tipoTransacao\" class=\"rounded-md text-white px-3 py-2 w-100\">\r\n          <option value=\"\">Selecione</option>\r\n          <option value=\"receita\">Receita</option>\r\n          <option value=\"gasto\">Gasto</option>\r\n        </select>\r\n      </v-col>\r\n    </v-row>\r\n    <div class=\"w-100 d-flex justify-end\">\r\n      <v-btn\r\n      @click=\"addTransacao()\"\r\n      class=\"elevation-0 px-8 bg-green-accent-3\">Adicionar</v-btn>\r\n    </div>\r\n  </div>\r\n  <ListTransactions />\r\n  <AlertPopupPainel\r\n    :statePopupPanel=\"statePopupPanel\"\r\n  >\r\n    {{ textPopupPanel }}\r\n  </AlertPopupPainel>\r\n  <SuccessPopupPanel\r\n    :statePopupPanel=\"stateSuccessPopup\"\r\n  >\r\n    {{ textSuccess }}\r\n  </SuccessPopupPanel>\r\n</template>\r\n\r\n<script setup>\r\nimport ListTransactions from '@/components/DaskTransactions/ListTransactions.vue'\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { db } from '@/firebase'\r\nimport { collection, addDoc, onSnapshot,updateDoc,doc} from \"firebase/firestore\";\r\nimport { onMounted } from 'vue';\r\nimport AlertPopupPainel from \"@/components/Popups/PanelPopups/AlertPopupPanel.vue\";\r\nimport SuccessPopupPanel from '@/components/Popups/PanelPopups/SuccessPopupPanel.vue';\r\n\r\n// Adicionar nova transação\r\n\r\nlet nomeTransacao = ref('')\r\nlet valorTransacao = ref('')\r\nlet dataTransacao = ref('')\r\nlet tipoTransacao = ref('')\r\n\r\nconst store = useStore()\r\n\r\nconst validadeInput = (() => {\r\n  valorTransacao.value = valorTransacao.value.replace(/[^0-9.]/g, \"\")\r\n  console.log(valorTransacao.value)\r\n  valorTransacao.value = valorTransacao.value.replace(/^(?!.*\\..*\\.)[\\d.]+$/, (match) => {\r\n    return match.replace(/\\.+/g, m => (m === '.' ? '.' : ''));\r\n  });\r\n})\r\n\r\nconst addTransacao = () => {\r\n\r\n  if(nomeTransacao.value.trim() != '' && valorTransacao.value.trim() != '' && dataTransacao.value.trim() != '' && tipoTransacao.value.trim() != '') {\r\n    \r\n    addDoc(collection(db, \"transacoes\"), {\r\n      idUser: store.state.token.id,\r\n      nome: nomeTransacao.value,\r\n      valor: valorTransacao.value,\r\n      data: dataTransacao.value.replace(/-/g,'/'),\r\n      tipo: tipoTransacao.value,\r\n    });\r\n\r\n    const saldoDocRef = doc(db, 'saldo', idSaldoCollection.value);\r\n\r\n    if (tipoTransacao.value === \"receita\") {\r\n      updateDoc(saldoDocRef, {\r\n      saldo: saldoUser.value += parseInt(valorTransacao.value),\r\n      receita: receitaUser.value += parseInt(valorTransacao.value)\r\n      })\r\n    }else {\r\n      updateDoc(saldoDocRef, {\r\n      saldo: saldoUser.value -= parseInt(valorTransacao.value),\r\n      gasto: gastoUser.value += parseInt(valorTransacao.value)\r\n      })\r\n    }\r\n\r\n    successPopup('Transação conluída!')\r\n  }else {\r\n    alertPopupPanel('Preencha os campos!')\r\n  }\r\n}\r\n\r\n\r\n// Mostrar dados de saldo\r\n\r\nlet saldoUser = ref(0)\r\nlet receitaUser = ref(0)\r\nlet gastoUser = ref(0)\r\nlet idSaldoCollection = ref()\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"saldo\"), (snapshot) => {\r\n    snapshot.forEach((docUser) => {\r\n      if(store.state.token.id === docUser.data().idUser) {\r\n        saldoUser.value = docUser.data().saldo\r\n        receitaUser.value = docUser.data().receita\r\n        gastoUser.value = docUser.data().gasto\r\n\r\n        idSaldoCollection.value = docUser.id\r\n      }\r\n    })\r\n  });\r\n})\r\n\r\nconst formatNumber = (num) => {\r\n  return `R$ ${parseFloat(num).toFixed(2).replace('.',',')}`\r\n}\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\nlet stateSuccessPopup = ref(false)\r\nlet textSuccess = ref('')\r\n\r\nconst successPopup = (msg) => {\r\n  stateSuccessPopup.value = true\r\n  textSuccess.value = msg\r\n\r\n  setTimeout(() => {\r\n    stateSuccessPopup.value = false\r\n  },2000)\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .saldo,.receitas,.gastos {\r\n    width: 100%;\r\n    height: 100px;\r\n    background-color: #25272c;\r\n  }\r\n\r\n  // Add new finance\r\n\r\n  .container-add-finance {\r\n    background-color: #25272c;\r\n\r\n    input {\r\n      border: none;\r\n      outline: none;\r\n      background-color: #151516;\r\n      width: 100%;\r\n    }\r\n\r\n    input::-webkit-input-placeholder {\r\n      color: rgb(145, 145, 145);\r\n    }\r\n\r\n    select {\r\n      border: none;\r\n      outline: none;\r\n      background-color: #151516;\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}