{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6b3d16ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"background-modal d-flex align-center justify-center\"\n};\nconst _hoisted_2 = {\n  class: \"add-new-transaction-modal\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Nova transação\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  const _component_CloseButton = _resolveComponent(\"CloseButton\");\n  const _component_AlertPopupPainel = _resolveComponent(\"AlertPopupPainel\");\n  const _component_SuccessPopupPanel = _resolveComponent(\"SuccessPopupPanel\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_ctx.stateModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"nav\", null, [_hoisted_3, _createVNode(_component_CloseButton, {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.stateTransactionModal = false)\n  })])])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_AlertPopupPainel, {\n    statePopupPanel: _ctx.statePopupPanel\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.textPopupPanel), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"statePopupPanel\"]), _createVNode(_component_SuccessPopupPanel, {\n    statePopupPanel: _ctx.stateSuccessPopup\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.textSuccess), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"statePopupPanel\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_ctx","stateModal","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_CloseButton","onClick","_cache","$event","stateTransactionModal","_component_AlertPopupPainel","statePopupPanel","textPopupPanel","_component_SuccessPopupPanel","stateSuccessPopup","textSuccess"],"sources":["C:\\Users\\PC\\Documents\\GitHub\\daskfinances\\src\\components\\AddTransaction\\AddTransactionModal.vue"],"sourcesContent":["<template>\r\n  <div\r\n    v-if=\"stateModal\"\r\n    class=\"background-modal d-flex align-center justify-center\"\r\n  >\r\n    <div class=\"add-new-transaction-modal\">\r\n      <nav>\r\n        <h1>Nova transação</h1>\r\n        <CloseButton\r\n            @click=\"stateTransactionModal = false\"\r\n        />\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <AlertPopupPainel\r\n    :statePopupPanel=\"statePopupPanel\"\r\n  >\r\n    {{ textPopupPanel }}\r\n  </AlertPopupPainel>\r\n  <SuccessPopupPanel\r\n    :statePopupPanel=\"stateSuccessPopup\"\r\n  >\r\n    {{ textSuccess }}\r\n  </SuccessPopupPanel>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { db } from '@/firebase'\r\nimport { collection, addDoc,updateDoc,onSnapshot,doc} from \"firebase/firestore\";\r\nimport AlertPopupPainel from \"@/components/Popups/PanelPopups/AlertPopupPanel.vue\";\r\nimport SuccessPopupPanel from '@/components/Popups/PanelPopups/SuccessPopupPanel.vue';\r\nimport { defineProps } from 'vue'\r\nimport { onMounted } from 'vue';\r\nimport CloseButton from '@/'\r\n\r\n// Adicionar nova transação\r\n\r\nletimport CloseButtonVue from '../Buttons/CloseButton.vue';\r\n nomeTransacao = ref('')\r\nlet valorTransacao = ref('')\r\nlet dataTransacao = ref('')\r\nlet tipoTransacao = ref('')\r\n\r\nconst store = useStore()\r\n\r\n/*const validadeInput = (() => {\r\n  valorTransacao.value = valorTransacao.value.replace(/[^0-9.]/g, \"\")\r\n})*/\r\n\r\nconst noSpaces = (() => {\r\n  if(\r\n     nomeTransacao.value.trim()  != '' \r\n  && valorTransacao.value.trim() != '' \r\n  && dataTransacao.value.trim()  != '' \r\n  && tipoTransacao.value.trim()  != ''\r\n  )\r\n    return true\r\n    \r\n  return false\r\n})\r\n\r\nconst addTransacao = () => {\r\n\r\n  if(noSpaces()) {\r\n    \r\n    addDoc(collection(db, \"transacoes\"), {\r\n      idUser: store.state.token.id,\r\n      nome: nomeTransacao.value,\r\n      valor: valorTransacao.value,\r\n      data: dataTransacao.value.replace(/-/g,'/'),\r\n      tipo: tipoTransacao.value,\r\n    });\r\n\r\n    const saldoDocRef = doc(db, 'saldo', idSaldoCollection.value);\r\n\r\n    if (tipoTransacao.value === \"receita\") {\r\n      updateDoc(saldoDocRef, {\r\n      saldo: saldoUser.value += parseInt(valorTransacao.value),\r\n      receita: receitaUser.value += parseInt(valorTransacao.value)\r\n      })\r\n    }else {\r\n      updateDoc(saldoDocRef, {\r\n      saldo: saldoUser.value -= parseInt(valorTransacao.value),\r\n      gasto: gastoUser.value += parseInt(valorTransacao.value)\r\n      })\r\n    }\r\n\r\n    successPopup('Transação conluída!')\r\n  }else {\r\n    alertPopupPanel('Preencha os campos!')\r\n  }\r\n}\r\n\r\nlet saldoUser = ref(0)\r\nlet receitaUser = ref(0)\r\nlet gastoUser = ref(0)\r\nlet idSaldoCollection = ref()\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"saldo\"), (snapshot) => {\r\n    snapshot.forEach((docUser) => {\r\n      if(store.state.token.id === docUser.data().idUser) {\r\n        saldoUser.value = docUser.data().saldo\r\n        receitaUser.value = docUser.data().receita\r\n        gastoUser.value = docUser.data().gasto\r\n\r\n        idSaldoCollection.value = docUser.id\r\n      }\r\n    })\r\n  });\r\n})\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\nlet stateSuccessPopup = ref(false)\r\nlet textSuccess = ref('')\r\n\r\nconst successPopup = (msg) => {\r\n  stateSuccessPopup.value = true\r\n  textSuccess.value = msg\r\n\r\n  setTimeout(() => {\r\n    stateSuccessPopup.value = false\r\n  },2000)\r\n}\r\n\r\ndefineProps({\r\n  stateModal: Boolean\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n  .background-modal {\r\n    position: fixed;\r\n    top: 60px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #17191c9b;\r\n    backdrop-filter: blur(5px);\r\n\r\n    .add-new-transaction-modal {\r\n      background-color: #25272c;\r\n      max-width: 500px;\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>"],"mappings":";;;;EAGIA,KAAK,EAAC;;;EAEDA,KAAK,EAAC;AAA2B;gEAElCC,mBAAA,CAAuB,YAAnB,gBAAc;;;;;;6DALhBC,IAAA,CAAAC,UAAU,I,cADlBC,mBAAA,CAYM,OAZNC,UAYM,GARJJ,mBAAA,CAOM,OAPNK,UAOM,GANJL,mBAAA,CAKM,cAJJM,UAAuB,EACvBC,YAAA,CAEEC,sBAAA;IADGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEV,IAAA,CAAAW,qBAAqB;iDAKvCL,YAAA,CAImBM,2BAAA;IAHhBC,eAAe,EAAEb,IAAA,CAAAa;EAAe;sBAEjC,MAAoB,C,kCAAjBb,IAAA,CAAAc,cAAc,iB;;;0CAEnBR,YAAA,CAIoBS,4BAAA;IAHjBF,eAAe,EAAEb,IAAA,CAAAgB;EAAiB;sBAEnC,MAAiB,C,kCAAdhB,IAAA,CAAAiB,WAAW,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}