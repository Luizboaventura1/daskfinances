{"ast":null,"code":"import { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { db } from '@/firebase';\nimport { collection, addDoc, updateDoc, onSnapshot, doc } from \"firebase/firestore\";\nimport AlertPopupPainel from \"@/components/Popups/PanelPopups/AlertPopupPanel.vue\";\nimport SuccessPopupPanel from '@/components/Popups/PanelPopups/SuccessPopupPanel.vue';\nimport { onMounted } from 'vue';\n\n// Adicionar nova transação\n\nexport default {\n  __name: 'AddTransactionModal',\n  props: {\n    stateModal: Boolean\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const addTransacao = () => {\n      if (noSpaces()) {\n        addDoc(collection(db, \"transacoes\"), {\n          idUser: store.state.token.id,\n          nome: nomeTransacao.value,\n          valor: valorTransacao.value,\n          data: dataTransacao.value.replace(/-/g, '/'),\n          tipo: tipoTransacao.value\n        });\n        addDoc(collection(db, \"notifications\"), {\n          idUser: store.state.token.id,\n          title: 'Nova transação',\n          text: `Transação ${formatNumber(valorTransacao.value)}`,\n          date: String(new Date()),\n          link: '/',\n          unread: true\n        });\n        const saldoDocRef = doc(db, 'saldo', idSaldoCollection.value);\n        if (tipoTransacao.value === \"receita\") {\n          updateDoc(saldoDocRef, {\n            saldo: saldoUser.value += parseInt(valorTransacao.value),\n            receita: receitaUser.value += parseInt(valorTransacao.value)\n          });\n        } else {\n          updateDoc(saldoDocRef, {\n            saldo: saldoUser.value -= parseInt(valorTransacao.value),\n            gasto: gastoUser.value += parseInt(valorTransacao.value)\n          });\n        }\n        successPopup('Transação conluída!');\n      } else {\n        alertPopupPanel('Preencha os campos!');\n      }\n    };\n\n    // Mostrar dados de saldo\n\n    let saldoUser = ref(0);\n    let receitaUser = ref(0);\n    let gastoUser = ref(0);\n    let idSaldoCollection = ref();\n    onMounted(async () => {\n      onSnapshot(collection(db, \"saldo\"), snapshot => {\n        snapshot.forEach(docUser => {\n          if (store.state.token.id === docUser.data().idUser) {\n            saldoUser.value = docUser.data().saldo;\n            receitaUser.value = docUser.data().receita;\n            gastoUser.value = docUser.data().gasto;\n            idSaldoCollection.value = docUser.id;\n          }\n        });\n      });\n    });\n    const validadeInput = () => {\n      valorTransacao.value = valorTransacao.value.replace(/[^0-9.]/g, \"\");\n    };\n    const noSpaces = () => {\n      if (nomeTransacao.value.trim() != '' && valorTransacao.value.trim() != '' && dataTransacao.value.trim() != '' && tipoTransacao.value.trim() != '') return true;\n      return false;\n    };\n    const clearInputs = () => {\n      nomeTransacao.value = ref('');\n      valorTransacao.value = ref('');\n      dataTransacao.value = ref('');\n      tipoTransacao.value = ref('');\n    };\n    let statePopupPanel = ref(false);\n    let textPopupPanel = ref('');\n    const alertPopupPanel = msg => {\n      statePopupPanel.value = true;\n      textPopupPanel.value = msg;\n      setTimeout(() => {\n        statePopupPanel.value = false;\n      }, 2000);\n    };\n    let stateSuccessPopup = ref(false);\n    let textSuccess = ref('');\n    const successPopup = msg => {\n      stateSuccessPopup.value = true;\n      textSuccess.value = msg;\n      setTimeout(() => {\n        stateSuccessPopup.value = false;\n      }, 2000);\n    };\n\n    // transaction type\n    let colorButtonExit = ref('');\n    let colorButtonProhibited = ref('');\n    const prohibitedButton = () => {\n      tipoTransacao.value = 'receita';\n      colorButtonProhibited.value = 'bg-green-darken-2';\n      colorButtonExit.value = '';\n    };\n    const exitButton = () => {\n      tipoTransacao.value = 'gasto';\n      colorButtonExit.value = 'bg-red-accent-3';\n      colorButtonProhibited.value = '';\n    };\n    const currentDay = () => {\n      const currentDate = new Date();\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth() + 1;\n      const day = currentDate.getDate();\n      const dataFormat = `${year}-${month < 10 ? '0' : ''}${month}-${day < 10 ? '0' : ''}${day}`;\n      return dataFormat;\n    };\n    const __returned__ = {\n      addTransacao,\n      get saldoUser() {\n        return saldoUser;\n      },\n      set saldoUser(v) {\n        saldoUser = v;\n      },\n      get receitaUser() {\n        return receitaUser;\n      },\n      set receitaUser(v) {\n        receitaUser = v;\n      },\n      get gastoUser() {\n        return gastoUser;\n      },\n      set gastoUser(v) {\n        gastoUser = v;\n      },\n      get idSaldoCollection() {\n        return idSaldoCollection;\n      },\n      set idSaldoCollection(v) {\n        idSaldoCollection = v;\n      },\n      validadeInput,\n      noSpaces,\n      clearInputs,\n      get statePopupPanel() {\n        return statePopupPanel;\n      },\n      set statePopupPanel(v) {\n        statePopupPanel = v;\n      },\n      get textPopupPanel() {\n        return textPopupPanel;\n      },\n      set textPopupPanel(v) {\n        textPopupPanel = v;\n      },\n      alertPopupPanel,\n      get stateSuccessPopup() {\n        return stateSuccessPopup;\n      },\n      set stateSuccessPopup(v) {\n        stateSuccessPopup = v;\n      },\n      get textSuccess() {\n        return textSuccess;\n      },\n      set textSuccess(v) {\n        textSuccess = v;\n      },\n      successPopup,\n      get colorButtonExit() {\n        return colorButtonExit;\n      },\n      set colorButtonExit(v) {\n        colorButtonExit = v;\n      },\n      get colorButtonProhibited() {\n        return colorButtonProhibited;\n      },\n      set colorButtonProhibited(v) {\n        colorButtonProhibited = v;\n      },\n      prohibitedButton,\n      exitButton,\n      currentDay,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get db() {\n        return db;\n      },\n      get collection() {\n        return collection;\n      },\n      get addDoc() {\n        return addDoc;\n      },\n      get updateDoc() {\n        return updateDoc;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get doc() {\n        return doc;\n      },\n      AlertPopupPainel,\n      SuccessPopupPanel,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useStore","db","collection","addDoc","updateDoc","onSnapshot","doc","AlertPopupPainel","SuccessPopupPanel","onMounted","addTransacao","noSpaces","idUser","store","state","token","id","nome","nomeTransacao","value","valor","valorTransacao","data","dataTransacao","replace","tipo","tipoTransacao","title","text","formatNumber","date","String","Date","link","unread","saldoDocRef","idSaldoCollection","saldo","saldoUser","parseInt","receita","receitaUser","gasto","gastoUser","successPopup","alertPopupPanel","snapshot","forEach","docUser","validadeInput","trim","clearInputs","statePopupPanel","textPopupPanel","msg","setTimeout","stateSuccessPopup","textSuccess","colorButtonExit","colorButtonProhibited","prohibitedButton","exitButton","currentDay","currentDate","year","getFullYear","month","getMonth","day","getDate","dataFormat"],"sources":["C:/Users/PC/Documents/GitHub/daskfinances/src/components/AddTransaction/AddTransactionModal.vue"],"sourcesContent":["<template>\r\n  <div\r\n    v-if=\"stateModal\"\r\n    class=\"background-modal d-flex align-center justify-center px-3\"\r\n  >\r\n    <div class=\"add-new-transaction-modal pa-4 rounded-lg\">\r\n      <nav class=\"d-flex pb-6 justify-space-between\">\r\n        <h1 class=\"text-white\">Nova transação</h1>\r\n        <slot name=\"nav\" />\r\n      </nav>\r\n\r\n      <div class=\"inputs-container\">\r\n        <input\r\n          v-model=\"nomeTransacao\"\r\n          class=\"input-transaction text-white w-100 border-0 px-2 py-3 rounded mb-4\"\r\n          placeholder=\"Descrição\"\r\n          maxlength=\"30\"\r\n        >\r\n        <input\r\n          v-model=\"valorTransacao\"\r\n          class=\"input-transaction text-white w-100 border-0 px-2 py-3 rounded mb-4\"\r\n          placeholder=\"Valor da transação\"\r\n          @input=\"validadeInput\"\r\n          maxlength=\"14\"\r\n        >\r\n        <input\r\n          v-model=\"dataTransacao\"\r\n          type=\"date\"\r\n          class=\"input-transaction w-100 px-2 py-3 text-white rounded mb-4\"\r\n          min=\"2000-01-01\" :max=\"currentDay()\"\r\n        >\r\n      </div>\r\n\r\n      <div class=\"transaction-type d-flex justify-space-between py-2 mb-4\">\r\n        <v-btn\r\n          @click=\"prohibitedButton\"\r\n          class=\"prohibited-button elevation-0 text-white\"\r\n          :class=\"colorButtonProhibited\"\r\n        >\r\n          Entrada\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:svgjs=\"http://svgjs.com/svgjs\" width=\"512\" height=\"512\" x=\"0\" y=\"0\" viewBox=\"0 0 512.171 512.171\" style=\"enable-background:new 0 0 512 512\" xml:space=\"preserve\" class=\"\"><g><path d=\"M479.046 283.925c-1.664-3.989-5.547-6.592-9.856-6.592H352.305V10.667C352.305 4.779 347.526 0 341.638 0H170.971c-5.888 0-10.667 4.779-10.667 10.667v266.667H42.971a10.702 10.702 0 0 0-9.856 6.571c-1.643 3.989-.747 8.576 2.304 11.627l212.8 213.504c2.005 2.005 4.715 3.136 7.552 3.136s5.547-1.131 7.552-3.115l213.419-213.504a10.645 10.645 0 0 0 2.304-11.628z\" data-original=\"#000000\"></path></g></svg>\r\n        </v-btn>\r\n        <v-btn\r\n          @click=\"exitButton\"\r\n          class=\"exit-button elevation-0\"\r\n          :class=\"colorButtonExit\"\r\n        >\r\n          Saida\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:svgjs=\"http://svgjs.com/svgjs\" width=\"512\" height=\"512\" x=\"0\" y=\"0\" viewBox=\"0 0 512.171 512.171\" style=\"enable-background:new 0 0 512 512\" xml:space=\"preserve\" class=\"\"><g><path d=\"M479.046 283.925c-1.664-3.989-5.547-6.592-9.856-6.592H352.305V10.667C352.305 4.779 347.526 0 341.638 0H170.971c-5.888 0-10.667 4.779-10.667 10.667v266.667H42.971a10.702 10.702 0 0 0-9.856 6.571c-1.643 3.989-.747 8.576 2.304 11.627l212.8 213.504c2.005 2.005 4.715 3.136 7.552 3.136s5.547-1.131 7.552-3.115l213.419-213.504a10.645 10.645 0 0 0 2.304-11.628z\" data-original=\"#000000\"></path></g></svg>\r\n        </v-btn>\r\n      </div>\r\n\r\n      <div class=\"buttons-container\">\r\n        <v-btn\r\n          @click=\"addTransacao\"\r\n          class=\"w-100 elevation-0 bg-blue-accent-3\"\r\n        >\r\n            Confirmar\r\n        </v-btn>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <AlertPopupPainel\r\n    :statePopupPanel=\"statePopupPanel\"\r\n  >\r\n    {{ textPopupPanel }}\r\n  </AlertPopupPainel>\r\n  <SuccessPopupPanel\r\n    :statePopupPanel=\"stateSuccessPopup\"\r\n  >\r\n    {{ textSuccess }}\r\n  </SuccessPopupPanel>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { db } from '@/firebase'\r\nimport { collection, addDoc, updateDoc, onSnapshot,doc} from \"firebase/firestore\";\r\nimport AlertPopupPainel from \"@/components/Popups/PanelPopups/AlertPopupPanel.vue\";\r\nimport SuccessPopupPanel from '@/components/Popups/PanelPopups/SuccessPopupPanel.vue';\r\nimport { defineProps } from 'vue'\r\nimport { onMounted } from 'vue';\r\n\r\n// Adicionar nova transação\r\n\r\nconst addTransacao = () => {\r\n\r\nif(noSpaces()) {\r\n  \r\n  addDoc(collection(db, \"transacoes\"), {\r\n    idUser: store.state.token.id,\r\n    nome: nomeTransacao.value,\r\n    valor: valorTransacao.value,\r\n    data: dataTransacao.value.replace(/-/g,'/'),\r\n    tipo: tipoTransacao.value,\r\n  });\r\n\r\n  addDoc(collection(db, \"notifications\"), {\r\n    idUser: store.state.token.id,\r\n    title: 'Nova transação',\r\n    text: `Transação ${formatNumber(valorTransacao.value)}`,\r\n    date: String(new Date()),\r\n    link: '/',\r\n    unread: true\r\n  });\r\n\r\n  const saldoDocRef = doc(db, 'saldo', idSaldoCollection.value);\r\n\r\n  if (tipoTransacao.value === \"receita\") {\r\n    updateDoc(saldoDocRef, {\r\n    saldo: saldoUser.value += parseInt(valorTransacao.value),\r\n    receita: receitaUser.value += parseInt(valorTransacao.value)\r\n    })\r\n  }else {\r\n    updateDoc(saldoDocRef, {\r\n    saldo: saldoUser.value -= parseInt(valorTransacao.value),\r\n    gasto: gastoUser.value += parseInt(valorTransacao.value)\r\n    })\r\n  }\r\n\r\n  successPopup('Transação conluída!')\r\n}else {\r\n  alertPopupPanel('Preencha os campos!')\r\n}\r\n}\r\n\r\n\r\n// Mostrar dados de saldo\r\n\r\nlet saldoUser = ref(0)\r\nlet receitaUser = ref(0)\r\nlet gastoUser = ref(0)\r\nlet idSaldoCollection = ref()\r\n\r\nonMounted(async () => {\r\nonSnapshot(collection(db, \"saldo\"), (snapshot) => {\r\n  snapshot.forEach((docUser) => {\r\n    if(store.state.token.id === docUser.data().idUser) {\r\n      saldoUser.value = docUser.data().saldo\r\n      receitaUser.value = docUser.data().receita\r\n      gastoUser.value = docUser.data().gasto\r\n\r\n      idSaldoCollection.value = docUser.id\r\n    }\r\n  })\r\n});\r\n})\r\n\r\nconst validadeInput = (() => {\r\n  valorTransacao.value = valorTransacao.value.replace(/[^0-9.]/g, \"\")\r\n})\r\n\r\nconst noSpaces = (() => {\r\n  if(\r\n     nomeTransacao.value.trim()  != '' \r\n  && valorTransacao.value.trim() != '' \r\n  && dataTransacao.value.trim()  != '' \r\n  && tipoTransacao.value.trim()  != ''\r\n  )\r\n    return true\r\n    \r\n  return false\r\n})\r\n\r\nconst clearInputs = () => {\r\n  nomeTransacao.value = ref('')\r\n  valorTransacao.value = ref('')\r\n  dataTransacao.value = ref('')\r\n  tipoTransacao.value = ref('')\r\n}\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\nlet stateSuccessPopup = ref(false)\r\nlet textSuccess = ref('')\r\n\r\nconst successPopup = (msg) => {\r\n  stateSuccessPopup.value = true\r\n  textSuccess.value = msg\r\n\r\n  setTimeout(() => {\r\n    stateSuccessPopup.value = false\r\n  },2000)\r\n}\r\n\r\ndefineProps({\r\n  stateModal: Boolean\r\n})\r\n\r\n// transaction type\r\nlet colorButtonExit = ref('')\r\nlet colorButtonProhibited = ref('')\r\n\r\nconst prohibitedButton = () => {\r\n  tipoTransacao.value = 'receita'\r\n  colorButtonProhibited.value = 'bg-green-darken-2'\r\n  colorButtonExit.value = ''\r\n}\r\n\r\nconst exitButton = () => {\r\n  tipoTransacao.value = 'gasto'\r\n  colorButtonExit.value = 'bg-red-accent-3'\r\n  colorButtonProhibited.value = ''\r\n}\r\n\r\nconst currentDay = () => {\r\n  const currentDate = new Date()\r\n\r\n  const year = currentDate.getFullYear()\r\n  const month = currentDate.getMonth() + 1\r\n  const day = currentDate.getDate()\r\n\r\n  const dataFormat = `${year}-${month < 10 ? '0' : ''}${month}-${day < 10 ? '0' : ''}${day}`\r\n\r\n  return dataFormat\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n  .background-modal {\r\n    position: fixed;\r\n    top: 60px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #17191c9b;\r\n    backdrop-filter: blur(5px);\r\n\r\n    .add-new-transaction-modal {\r\n      background-color: #25272c;\r\n      max-width: 500px;\r\n      width: 100%;\r\n    }\r\n\r\n    .input-transaction {\r\n      background-color: #33363c;\r\n      outline: none;\r\n      border: none;\r\n    }\r\n\r\n    .transaction-type {\r\n      .prohibited-button {\r\n        svg {rotate: 180deg;}\r\n        background-color: #ffffff00;\r\n      }\r\n\r\n      .exit-button {\r\n        background-color: rgba(255, 255, 255, 0);\r\n        &:active {\r\n          background-color: red;\r\n        }\r\n      }\r\n      \r\n      svg {\r\n        margin-left: 10px;\r\n        width: 20px;\r\n        height: 20px;\r\n        fill: white;\r\n      }\r\n    }\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}