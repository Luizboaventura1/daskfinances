{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, unref as _unref, resolveComponent as _resolveComponent, isRef as _isRef, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-12583568\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"d-flex justify-center align-center\"\n};\nconst _hoisted_2 = {\n  class: \"elevation-10 rounded-lg py-3 px-4\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-white text-center mb-5\"\n}, \"Registrar\", -1));\nconst _hoisted_4 = {\n  class: \"w-100 text-center\"\n};\nimport { ref } from 'vue';\nimport { db } from '@/firebase';\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\nimport { useRouter } from 'vue-router';\nimport { onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport AlertPopupPanel from '@/components/Popups/PanelPopups/AlertPopupPanel.vue';\n//import { getAuth,createUserWithEmailAndPassword } from 'firebase/auth';\n\n/* Auth\r\nconst auth = getAuth()\r\n\r\nconst registerUser = () => {\r\n  createUserWithEmailAndPassword(auth,'luiz2123@gmail.com','233784').then(user => {\r\n    console.log(user.user)\r\n  }).catch(error => [\r\n    console.log(error)\r\n  ])\r\n}\r\n*/\n//==================================\n\nexport default {\n  __name: 'RegistrarView',\n  setup(__props) {\n    const store = useStore();\n    let AllUsers = ref([]);\n    onMounted(async () => {\n      onSnapshot(collection(db, \"usuarios\"), snapshot => {\n        snapshot.forEach(user => {\n          const obj = {\n            id: user.id,\n            nome: user.data().nome,\n            gmail: user.data().gmail,\n            senha: user.data().senha\n          };\n          AllUsers.value.push(obj);\n        });\n      });\n    });\n    let nome = ref('');\n    let gmail = ref('');\n    let senha = ref('');\n    let router = useRouter();\n    const registrarUsuario = () => {\n      let nomeValue = nome.value.trim();\n      let gmailValue = gmail.value.trim();\n      let senhaValue = senha.value.trim();\n      if (confirmRules) {\n        let verificarSeAContaExiste = AllUsers.value.some(user => user.gmail.startsWith(gmailValue));\n        if (!verificarSeAContaExiste) {\n          loader.value = true;\n          setTimeout(() => {\n            loader.value = false;\n            router.push('/painel');\n          }, 900);\n          addDoc(collection(db, \"usuarios\"), {\n            nome: nomeValue,\n            gmail: gmailValue,\n            senha: senhaValue\n          });\n          store.commit('addToken', {\n            id: '',\n            nome: nomeValue,\n            gmail: gmailValue,\n            senha: senhaValue,\n            tokenOn: true\n          });\n        } else {\n          alertPopupPanel('Essa conta já existe!');\n        }\n      }\n    };\n\n    // Loader\n\n    let loader = ref(false);\n\n    // Popups\n\n    let statePopupPanel = ref(false);\n    let textPopupPanel = ref('');\n    const alertPopupPanel = msg => {\n      statePopupPanel.value = true;\n      textPopupPanel.value = msg;\n      setTimeout(() => {\n        statePopupPanel.value = false;\n      }, 2000);\n    };\n\n    // Rules login\n\n    const nameRules = ref([value => {\n      if (value) return true;\n      return 'Senha obrigatória!';\n    }, value => {\n      if (value.length >= 3) return true;\n      return 'Minimo 3 letras';\n    }]);\n    const emailRules = ref([value => {\n      if (value) return true;\n      return 'Email obrigatório!';\n    }, value => {\n      if (value.includes('@')) return true;\n      return 'Email inválido!';\n    }]);\n    const passwordRules = ref([value => {\n      if (value) return true;\n      return 'Senha obrigatória!';\n    }, value => {\n      if (value.length >= 8) return true;\n      return 'Minimo 8 caracteres';\n    }]);\n    const confirmRules = () => {\n      if (nameRules.value[0] && nameRules.value[1] && emailRules.value[0] && emailRules.value[1] && passwordRules.value[0] && passwordRules.value[1]) return true;\n      return false;\n    };\n    return (_ctx, _cache) => {\n      const _component_v_text_field = _resolveComponent(\"v-text-field\");\n      const _component_v_btn = _resolveComponent(\"v-btn\");\n      const _component_router_link = _resolveComponent(\"router-link\");\n      const _component_v_container = _resolveComponent(\"v-container\");\n      const _component_v_progress_linear = _resolveComponent(\"v-progress-linear\");\n      const _component_v_card_text = _resolveComponent(\"v-card-text\");\n      const _component_v_card = _resolveComponent(\"v-card\");\n      const _component_v_dialog = _resolveComponent(\"v-dialog\");\n      return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"header\", _hoisted_1, [_createVNode(_component_v_container, {\n        class: \"d-flex justify-center align-center\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"form\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", null, [_createVNode(_component_v_text_field, {\n          required: \"\",\n          label: \"Nome\",\n          modelValue: _unref(nome),\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _isRef(nome) ? nome.value = $event : nome = $event),\n          class: \"text-white w-100 border-0 pa-2 rounded\",\n          type: \"email\",\n          placeholder: \"Primeiro nome\",\n          rules: nameRules.value,\n          variant: \"outlined\"\n        }, null, 8, [\"modelValue\", \"rules\"])]), _createElementVNode(\"div\", null, [_createVNode(_component_v_text_field, {\n          label: \"Email\",\n          required: \"\",\n          modelValue: _unref(gmail),\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _isRef(gmail) ? gmail.value = $event : gmail = $event),\n          class: \"text-white w-100 border-0 pa-2 rounded\",\n          type: \"email\",\n          placeholder: \"Seu email\",\n          rules: emailRules.value,\n          variant: \"outlined\"\n        }, null, 8, [\"modelValue\", \"rules\"])]), _createElementVNode(\"div\", null, [_createVNode(_component_v_text_field, {\n          label: \"Senha\",\n          required: \"\",\n          modelValue: _unref(senha),\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _isRef(senha) ? senha.value = $event : senha = $event),\n          class: \"text-white w-100 border-0 pa-2 rounded\",\n          type: \"password\",\n          placeholder: \"Sua senha\",\n          rules: passwordRules.value,\n          variant: \"outlined\"\n        }, null, 8, [\"modelValue\", \"rules\"])]), _createVNode(_component_v_btn, {\n          disabled: _unref(loader),\n          loading: _unref(loader),\n          onClick: _cache[3] || (_cache[3] = $event => registrarUsuario()),\n          class: \"w-100 my-3 button-registrar\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Criar conta\")]),\n          _: 1\n        }, 8, [\"disabled\", \"loading\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_router_link, {\n          class: \"link-registrar text-decoration-none font-weight-light\",\n          to: \"/auth/login\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Tem uma conta?\")]),\n          _: 1\n        })])])]),\n        _: 1\n      })]), _createVNode(_component_v_dialog, {\n        modelValue: _unref(loader),\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _isRef(loader) ? loader.value = $event : loader = $event),\n        scrim: false,\n        persistent: \"\",\n        width: \"auto\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, {\n          color: \"blue-darken-1\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createTextVNode(\" Registrando \"), _createVNode(_component_v_progress_linear, {\n              indeterminate: \"\",\n              color: \"white\",\n              class: \"mb-0\"\n            })]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"modelValue\"]), _createVNode(AlertPopupPanel, {\n        statePopupPanel: _unref(statePopupPanel)\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_unref(textPopupPanel)), 1)]),\n        _: 1\n      }, 8, [\"statePopupPanel\"])], 64);\n    };\n  }\n};","map":{"version":3,"names":["ref","db","collection","addDoc","onSnapshot","useRouter","onMounted","useStore","AlertPopupPanel","store","AllUsers","snapshot","forEach","user","obj","id","nome","data","gmail","senha","value","push","router","registrarUsuario","nomeValue","trim","gmailValue","senhaValue","confirmRules","verificarSeAContaExiste","some","startsWith","loader","setTimeout","commit","tokenOn","alertPopupPanel","statePopupPanel","textPopupPanel","msg","nameRules","length","emailRules","includes","passwordRules"],"sources":["C:/Users/PC/Documents/GitHub/daskfinances/src/views/auth/RegistrarView.vue"],"sourcesContent":["<template>\r\n  <header class=\"d-flex justify-center align-center\">\r\n    <v-container class=\"d-flex justify-center align-center\">\r\n      <form class=\"elevation-10 rounded-lg py-3 px-4\">\r\n        <h1 class=\"text-white text-center mb-5\">Registrar</h1>\r\n\r\n        <div>\r\n          <v-text-field\r\n            required\r\n            label=\"Nome\"\r\n            v-model=\"nome\"\r\n            class=\"text-white w-100 border-0 pa-2 rounded\"\r\n            type=\"email\"\r\n            placeholder=\"Primeiro nome\"\r\n            :rules=\"nameRules\"\r\n            variant=\"outlined\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <div>\r\n          <v-text-field\r\n            label=\"Email\"\r\n            required\r\n            v-model=\"gmail\"\r\n            class=\"text-white w-100 border-0 pa-2 rounded\"\r\n            type=\"email\"\r\n            placeholder=\"Seu email\"\r\n            :rules=\"emailRules\"\r\n            variant=\"outlined\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <div>\r\n          <v-text-field\r\n            label=\"Senha\"\r\n            required\r\n            v-model=\"senha\"\r\n            class=\"text-white w-100 border-0 pa-2 rounded\"\r\n            type=\"password\"\r\n            placeholder=\"Sua senha\"\r\n            :rules=\"passwordRules\"\r\n            variant=\"outlined\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <v-btn\r\n        :disabled=\"loader\"\r\n        :loading=\"loader\"\r\n        @click=\"registrarUsuario()\"\r\n        class=\"w-100 my-3 button-registrar\"\r\n        >Criar conta</v-btn>\r\n\r\n        <div class=\"w-100 text-center\">\r\n          <router-link\r\n          class=\"link-registrar text-decoration-none font-weight-light\"\r\n          to=\"/auth/login\">Tem uma conta?</router-link>\r\n        </div>\r\n      </form>\r\n    </v-container>\r\n  </header>\r\n\r\n  <v-dialog\r\n      v-model=\"loader\"\r\n      :scrim=\"false\"\r\n      persistent\r\n      width=\"auto\"\r\n    >\r\n      <v-card\r\n        color=\"blue-darken-1\"\r\n      >\r\n        <v-card-text>\r\n          Registrando\r\n          <v-progress-linear\r\n            indeterminate\r\n            color=\"white\"\r\n            class=\"mb-0\"\r\n          ></v-progress-linear>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-dialog>\r\n  <AlertPopupPanel\r\n    :statePopupPanel=\"statePopupPanel\"\r\n  >\r\n    {{ textPopupPanel }}\r\n  </AlertPopupPanel>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { db } from '@/firebase'\r\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\r\nimport { useRouter } from 'vue-router';\r\nimport { onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport AlertPopupPanel from '@/components/Popups/PanelPopups/AlertPopupPanel.vue';\r\n//import { getAuth,createUserWithEmailAndPassword } from 'firebase/auth';\r\n\r\n/* Auth\r\nconst auth = getAuth()\r\n\r\nconst registerUser = () => {\r\n  createUserWithEmailAndPassword(auth,'luiz2123@gmail.com','233784').then(user => {\r\n    console.log(user.user)\r\n  }).catch(error => [\r\n    console.log(error)\r\n  ])\r\n}\r\n*/\r\n//==================================\r\n\r\nconst store = useStore()\r\n\r\nlet AllUsers = ref([])\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"usuarios\"), (snapshot) => {\r\n    snapshot.forEach((user) => {\r\n      const obj = {\r\n        id: user.id,\r\n        nome: user.data().nome,\r\n        gmail: user.data().gmail,\r\n        senha: user.data().senha\r\n      }\r\n\r\n      AllUsers.value.push(obj)\r\n    })\r\n  });\r\n})\r\n\r\nlet nome = ref('')\r\nlet gmail = ref('')\r\nlet senha = ref('')\r\n\r\nlet router = useRouter()\r\n\r\nconst registrarUsuario = () => {\r\n  let nomeValue = nome.value.trim()\r\n  let gmailValue = gmail.value.trim()\r\n  let senhaValue = senha.value.trim()\r\n\r\n  if(confirmRules) {\r\n\r\n    let verificarSeAContaExiste = AllUsers.value.some(user => user.gmail.startsWith(gmailValue))\r\n    \r\n    if(!verificarSeAContaExiste) {\r\n      loader.value = true\r\n      setTimeout(() => {\r\n        loader.value = false\r\n        router.push('/painel')\r\n      },900)\r\n      \r\n      addDoc(collection(db, \"usuarios\"), {\r\n        nome: nomeValue,\r\n        gmail: gmailValue,\r\n        senha: senhaValue\r\n      });\r\n\r\n      store.commit('addToken',{\r\n        id: '',\r\n        nome: nomeValue,\r\n        gmail: gmailValue,\r\n        senha: senhaValue,\r\n        tokenOn: true\r\n      })\r\n\r\n    }else {\r\n      alertPopupPanel('Essa conta já existe!')\r\n    }\r\n  }\r\n}\r\n\r\n// Loader\r\n\r\nlet loader = ref(false)\r\n\r\n// Popups\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\n// Rules login\r\n\r\nconst nameRules = ref([\r\n  value => {\r\n    if(value)\r\n      return true\r\n    return 'Senha obrigatória!'\r\n  },\r\n  value => {\r\n    if(value.length >= 3) \r\n      return true\r\n    return 'Minimo 3 letras'\r\n  }\r\n])\r\n\r\nconst emailRules = ref([\r\n  value => {\r\n    if(value)\r\n      return true\r\n    return 'Email obrigatório!'\r\n  },\r\n  value => {\r\n    if(value.includes('@'))\r\n      return true\r\n    return 'Email inválido!'\r\n  },\r\n])\r\n\r\nconst passwordRules = ref([\r\n  value => {\r\n    if(value)\r\n      return true\r\n    return 'Senha obrigatória!'\r\n  },\r\n  value => {\r\n    if(value.length >= 8)\r\n      return true\r\n    return 'Minimo 8 caracteres'\r\n  }\r\n])\r\n\r\nconst confirmRules = () => {\r\n  if(\r\n    nameRules.value[0] && nameRules.value[1] &&\r\n    emailRules.value[0] && emailRules.value[1] &&\r\n    passwordRules.value[0] && passwordRules.value[1]\r\n  ) return true\r\n\r\n  return false\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n  header {\r\n    height: 100vh;\r\n    background-color: #17191c;\r\n\r\n    form {\r\n      width: 100%;\r\n      max-width: 400px;\r\n      min-height: 350px;\r\n      background-color: #25272c;\r\n\r\n      input {\r\n        outline: none;\r\n        background-color: #17191c;\r\n      }\r\n\r\n      .link-registrar {\r\n        color: #959595;\r\n        font-size: 15px;\r\n\r\n        &:hover {\r\n          color: #949494;\r\n          text-decoration: underline !important;\r\n        }\r\n      }\r\n\r\n      .button-registrar {\r\n        background-color: #00b2ff;\r\n        color: white;\r\n        box-shadow: none;\r\n\r\n        &:hover {\r\n          box-shadow: 0 0 10px #0084ff65;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}