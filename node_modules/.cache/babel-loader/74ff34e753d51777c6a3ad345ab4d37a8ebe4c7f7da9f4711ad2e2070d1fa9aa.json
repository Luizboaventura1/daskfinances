{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, mergeProps as _mergeProps, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../../assets/img-notification.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-1d5f7d6e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"circle rounded-circle\"\n};\nimport { db } from '@/firebase';\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ref } from 'vue';\nexport default {\n  __name: 'BadgeIcon',\n  props: {\n    propsBadge: Object\n  },\n  setup(__props) {\n    let store = useStore();\n    let unread = ref(false);\n    onMounted(async () => {\n      onSnapshot(collection(db, \"notifications\"), snapshot => {\n        let notifications = [];\n        snapshot.forEach(notification => {\n          if (store.state.token.id === notification.data().idUser) {\n            notifications.push({\n              id: notification.id,\n              title: notification.data().title,\n              text: notification.data().text,\n              date: notification.data().date,\n              link: notification.data().link,\n              unread: notification.data().unread\n            });\n          }\n        });\n        unread.value = notifications.some(notification => notification.unread === true);\n      });\n    });\n    return (_ctx, _cache) => {\n      const _component_v_img = _resolveComponent(\"v-img\");\n      return _openBlock(), _createElementBlock(\"div\", _mergeProps({\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('readNotification')),\n        class: \"badge\"\n      }, __props.propsBadge), [_unref(unread) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1)) : _createCommentVNode(\"\", true), _createVNode(_component_v_img, {\n        width: \"20\",\n        src: _imports_0\n      })], 16);\n    };\n  }\n};","map":{"version":3,"names":["db","collection","onSnapshot","onMounted","useStore","ref","store","unread","snapshot","notifications","forEach","notification","state","token","id","data","idUser","push","title","text","date","link","value","some"],"sources":["C:/Users/PC/Documents/GitHub/daskfinances/src/components/Notifications/BadgeIcon.vue"],"sourcesContent":["<template>\r\n  <div\r\n    @click=\"$emit('readNotification')\"\r\n    class=\"badge\" v-bind=\"propsBadge\">\r\n    <div\r\n      v-if=\"unread\"\r\n      class=\"circle rounded-circle\"\r\n    ></div>\r\n    <v-img width=\"20\" src=\"../../assets/img-notification.svg\"></v-img>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { db } from '@/firebase'\r\nimport { collection, onSnapshot,} from \"firebase/firestore\";\r\nimport { onMounted } from 'vue';\r\nimport { useStore } from 'vuex'\r\nimport { ref } from 'vue'\r\nimport { defineProps } from 'vue'\r\nlet store = useStore()\r\n\r\nlet unread = ref(false)\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"notifications\"), (snapshot) => {\r\n    let notifications = []\r\n    snapshot.forEach((notification) => {\r\n      if(store.state.token.id === notification.data().idUser) {\r\n        notifications.push({\r\n          id: notification.id,\r\n          title: notification.data().title,\r\n          text: notification.data().text,\r\n          date: notification.data().date,\r\n          link: notification.data().link,\r\n          unread: notification.data().unread\r\n        })\r\n      }\r\n    })\r\n    unread.value = notifications.some(notification => notification.unread === true )\r\n  });\r\n})\r\n\r\ndefineProps({\r\n  propsBadge: Object\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .badge {\r\n    width: 20px;\r\n    height: 20px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    .circle {\r\n      position: absolute;\r\n      width: 12px;\r\n      height: 12px;\r\n      z-index: 10;\r\n      right: -6px;\r\n      top: -6px;\r\n      background-color: rgb(199, 25, 25);\r\n    }\r\n  }\r\n</style>"],"mappings":";;;;;;;;AAaA,SAASA,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,UAAU,QAAQ,oBAAoB;AAC3D,SAASC,SAAS,QAAQ,KAAK;AAC/B,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,GAAG,QAAQ,KAAK;;;;;;;IAEzB,IAAIC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IAEtB,IAAIG,MAAM,GAAGF,GAAG,CAAC,KAAK,CAAC;IAEvBF,SAAS,CAAC,YAAY;MACpBD,UAAU,CAACD,UAAU,CAACD,EAAE,EAAE,eAAe,CAAC,EAAGQ,QAAQ,IAAK;QACxD,IAAIC,aAAa,GAAG,EAAE;QACtBD,QAAQ,CAACE,OAAO,CAAEC,YAAY,IAAK;UACjC,IAAGL,KAAK,CAACM,KAAK,CAACC,KAAK,CAACC,EAAE,KAAKH,YAAY,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,EAAE;YACtDP,aAAa,CAACQ,IAAI,CAAC;cACjBH,EAAE,EAAEH,YAAY,CAACG,EAAE;cACnBI,KAAK,EAAEP,YAAY,CAACI,IAAI,CAAC,CAAC,CAACG,KAAK;cAChCC,IAAI,EAAER,YAAY,CAACI,IAAI,CAAC,CAAC,CAACI,IAAI;cAC9BC,IAAI,EAAET,YAAY,CAACI,IAAI,CAAC,CAAC,CAACK,IAAI;cAC9BC,IAAI,EAAEV,YAAY,CAACI,IAAI,CAAC,CAAC,CAACM,IAAI;cAC9Bd,MAAM,EAAEI,YAAY,CAACI,IAAI,CAAC,CAAC,CAACR;YAC9B,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;QACFA,MAAM,CAACe,KAAK,GAAGb,aAAa,CAACc,IAAI,CAACZ,YAAY,IAAIA,YAAY,CAACJ,MAAM,KAAK,IAAK,CAAC;MAClF,CAAC,CAAC;IACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}