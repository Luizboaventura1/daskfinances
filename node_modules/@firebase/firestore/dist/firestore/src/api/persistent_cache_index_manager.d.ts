/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FirestoreClient } from '../core/firestore_client';
import { Firestore } from './database';
/**
 * A `PersistentCacheIndexManager` which you can config persistent cache indexes
 * used for local query execution.
 *
 * To use, call `getPersistentCacheIndexManager()` to get an instance.
 *
 * TODO(CSI) Remove @internal to make the API publicly available.
 * @internal
 */
export declare class PersistentCacheIndexManager {
    readonly _client: FirestoreClient;
    readonly type: 'PersistentCacheIndexManager';
    /** @hideconstructor */
    constructor(_client: FirestoreClient);
}
/**
 * Returns the PersistentCache Index Manager used by the given `Firestore`
 * object.
 *
 * @return The `PersistentCacheIndexManager` instance, or `null` if local
 * persistent storage is not in use.
 *
 * TODO(CSI) Remove @internal to make the API publicly available.
 * @internal
 */
export declare function getPersistentCacheIndexManager(firestore: Firestore): PersistentCacheIndexManager | null;
/**
 * Enables SDK to create persistent cache indexes automatically for local query
 * execution when SDK believes cache indexes can help improves performance.
 *
 * This feature is disabled by default.
 *
 * TODO(CSI) Remove @internal to make the API publicly available.
 * @internal
 */
export declare function enablePersistentCacheIndexAutoCreation(indexManager: PersistentCacheIndexManager): void;
/**
 * Stops creating persistent cache indexes automatically for local query
 * execution. The indexes which have been created by calling
 * `enablePersistentCacheIndexAutoCreation()` still take effect.
 *
 * TODO(CSI) Remove @internal to make the API publicly available.
 * @internal
 */
export declare function disablePersistentCacheIndexAutoCreation(indexManager: PersistentCacheIndexManager): void;
/**
 * Removes all persistent cache indexes.
 *
 * Please note this function will also deletes indexes generated by
 * `setIndexConfiguration()`, which is deprecated.
 *
 * TODO(CSI) Remove @internal to make the API publicly available.
 * @internal
 */
export declare function deleteAllPersistentCacheIndexes(indexManager: PersistentCacheIndexManager): void;
