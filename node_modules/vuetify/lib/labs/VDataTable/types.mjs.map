{"version":3,"file":"types.mjs","names":[],"sources":["../../../src/labs/VDataTable/types.ts"],"sourcesContent":["import type { InternalItem } from '@/composables/items'\nimport type { SelectItemKey } from '@/util'\n\nexport type DataTableCompareFunction<T = any> = (a: T, b: T) => number\n\nexport type DataTableHeader = {\n  key: string\n  value?: SelectItemKey\n  title: string\n\n  colspan?: number\n  rowspan?: number\n\n  fixed?: boolean\n  align?: 'start' | 'end'\n\n  width?: number\n  minWidth?: string\n  maxWidth?: string\n\n  sortable?: boolean\n  sort?: DataTableCompareFunction\n}\n\nexport type InternalDataTableHeader = DataTableHeader & {\n  sortable: boolean\n\n  fixedOffset?: number\n  lastFixed?: boolean\n}\n\nexport type DataTableItem = InternalItem & { type: 'item', columns: Record<string, unknown> }\n\nexport type GroupHeaderItem = {\n  type: 'group-header'\n  id: string\n  key: string\n  value: string\n  depth: number\n  items: (GroupHeaderItem | DataTableItem)[]\n}\n\nexport type InternalDataTableItem = DataTableItem | GroupHeaderItem\n"],"mappings":""}