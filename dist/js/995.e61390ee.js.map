{"version":3,"file":"js/995.e61390ee.js","mappings":"moBAsFA,IAAIA,GAAWC,EAAAA,EAAAA,IAAI,KAEnBC,EAAAA,EAAAA,KAAUC,WACRC,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,aAAcC,IACtCA,EAASC,SAASC,IAChB,MAAMC,EAAO,CACXC,GAAIF,EAAQE,GACZC,KAAMH,EAAQI,OAAOD,KACrBE,MAAOL,EAAQI,OAAOC,MACtBC,MAAON,EAAQI,OAAOE,OAGxBf,EAASgB,MAAMC,KAAKP,EAAK,GACzB,GACF,IAGJ,IAAII,GAAQb,EAAAA,EAAAA,IAAI,IACZc,GAAQd,EAAAA,EAAAA,IAAI,IAEZiB,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAEb,MAAMC,EAAeA,KACnB,IAAIC,EAAaT,EAAME,MAAMQ,OACzBC,EAAaV,EAAMC,MAAMQ,OAE7B,GAAiB,IAAdD,GAAkC,IAAdE,EAAkB,CAEvC,IAAIC,EAA0B1B,EAASgB,MAAMW,MAAKjB,GAC7CA,EAAKI,QAAUS,GAAcb,EAAKK,QAAUU,IAO7CG,EAAY5B,EAASgB,MAAMW,MAAME,GAASA,EAAKf,OAASS,IACxDO,EAAY9B,EAASgB,MAAMW,MAAME,GAASA,EAAKd,OAASU,IACxDM,EAAW/B,EAASgB,MAAMW,MAAME,IAClC,GAAGA,EAAKf,OAASS,EACf,OAAOM,EAAKjB,IAAI,IAGpB,GAAGc,EAAyB,CAC1BM,EAAOhB,OAAQ,EACfiB,YAAW,KACTD,EAAOhB,OAAQ,EACfI,EAAOH,KAAK,UAAU,GACtB,KAEF,MAAMiB,EAAQ,CACZvB,GAAIiB,EAAUjB,GACdC,KAAMmB,EAASnB,KACfE,MAAOc,EAAUd,MACjBC,MAAOe,EAAUf,MACjBoB,SAAS,GAGXjB,EAAMkB,OAAO,WAAWF,EAC1B,MACEG,EAAgB,wBAEpB,MACEC,EAAYxB,EAAME,MAAMD,EAAMC,MAChC,EAKF,IAAIgB,GAAS/B,EAAAA,EAAAA,KAAI,GAIbsC,GAAuBtC,EAAAA,EAAAA,KAAI,GAC3BuC,GAA0BvC,EAAAA,EAAAA,KAAI,GAElC,MAAMqC,EAAcA,CAACxB,EAAM2B,KAEZ,KAAV3B,IACDyB,EAAqBvB,OAAQ,GAGf,KAAbyB,IACDD,EAAwBxB,OAAQ,EAClC,EAIF,IAAI0B,GAAkBzC,EAAAA,EAAAA,KAAI,GACtB0C,GAAiB1C,EAAAA,EAAAA,IAAI,IAEzB,MAAMoC,EAAmBO,IACvBF,EAAgB1B,OAAQ,EACxB2B,EAAe3B,MAAQ4B,EAEvBX,YAAW,KACTS,EAAgB1B,OAAQ,CAAK,GAC7B,IAAK,E,wzDClLT,MAAM6B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://app/./src/views/auth/LoginView.vue","webpack://app/./src/views/auth/LoginView.vue?4511"],"sourcesContent":["<template>\r\n  <header class=\"d-flex justify-center align-center\">\r\n    <v-container class=\"d-flex justify-center align-center\">\r\n      <form class=\"elevation-10 rounded-lg py-3 px-4\">\r\n        <h1 class=\"text-white text-center mb-5\">Login</h1>\r\n        <div class=\"mb-4\">\r\n          <input\r\n          required\r\n          v-model=\"gmail\"\r\n          class=\"text-white w-100 border-0 pa-2 rounded\"\r\n          type=\"email\"\r\n          placeholder=\"Seu email\">\r\n          <ErrorInputLogin\r\n            :statePopup=\"stateErrorInputGmail\"\r\n          >\r\n            Gmail incorreto!\r\n          </ErrorInputLogin>\r\n        </div>\r\n\r\n        <div class=\"mb-6\">\r\n          <input\r\n          required\r\n          v-model=\"senha\"\r\n          class=\"text-white w-100 border-0 pa-2 rounded\"\r\n          type=\"password\"\r\n          placeholder=\"Sua senha\">\r\n          <ErrorInputLogin\r\n            :statePopup=\"stateErrorInputPassword\"\r\n          >\r\n            Senha incorreta!\r\n          </ErrorInputLogin>\r\n        </div>\r\n\r\n        <v-btn\r\n        :disabled=\"loader\"\r\n        :loading=\"loader\"\r\n        @click=\"logarUsuario()\"\r\n        class=\"w-100 my-3 button-entrar\"\r\n        >Entrar</v-btn>\r\n\r\n        <div class=\"w-100 text-center\">\r\n          <router-link\r\n          class=\"link-registrar text-decoration-none font-weight-light\"\r\n          to=\"/auth/registrar\">Não tem uma conta?</router-link>\r\n        </div>\r\n      </form>\r\n    </v-container>\r\n  </header>\r\n\r\n  <v-dialog\r\n      v-model=\"loader\"\r\n      :scrim=\"false\"\r\n      persistent\r\n      width=\"auto\"\r\n    >\r\n      <v-card\r\n        color=\"blue-darken-1\"\r\n      >\r\n        <v-card-text>\r\n          Entrando\r\n          <v-progress-linear\r\n            indeterminate\r\n            color=\"white\"\r\n            class=\"mb-0\"\r\n          ></v-progress-linear>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n  <AlertPopupPanel\r\n    :statePopupPanel=\"statePopupPanel\"\r\n  >\r\n    {{ textPopupPanel }}\r\n  </AlertPopupPanel>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport { db } from '@/firebase'\r\nimport { collection, onSnapshot} from \"firebase/firestore\";\r\nimport { onMounted } from 'vue';\r\nimport ErrorInputLogin from '@/components/Popups/ErrorLogin/ErrorInputLogin.vue';\r\nimport AlertPopupPanel from '@/components/Popups/PanelPopups/AlertPopupPanel.vue';\r\n\r\nlet AllUsers = ref([])\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"usuarios\"), (snapshot) => {\r\n    snapshot.forEach((docUser) => {\r\n      const user = {\r\n        id: docUser.id,\r\n        nome: docUser.data().nome,\r\n        gmail: docUser.data().gmail,\r\n        senha: docUser.data().senha\r\n      }\r\n\r\n      AllUsers.value.push(user)\r\n    })\r\n  });\r\n})\r\n\r\nlet gmail = ref('')\r\nlet senha = ref('')\r\n\r\nlet store = useStore()\r\nlet router = useRouter()\r\n\r\nconst logarUsuario = () => {\r\n  let gmailValue = gmail.value.trim()\r\n  let senhaValue = senha.value.trim()\r\n\r\n  if(gmailValue != '' && senhaValue != '') {\r\n    //Verifica se tem uma conta existente\r\n    let verificarSeAContaExiste = AllUsers.value.find(user => {\r\n      if(user.gmail === gmailValue && user.senha === senhaValue) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    })\r\n\r\n    let gmailUser = AllUsers.value.find((item) => item.gmail == gmailValue)\r\n    let senhaUser = AllUsers.value.find((item) => item.senha == senhaValue)\r\n    let nomeUser = AllUsers.value.find((item) => {\r\n      if(item.gmail == gmailValue)\r\n        return item.nome\r\n    })\r\n\r\n    if(verificarSeAContaExiste) {\r\n      loader.value = true\r\n      setTimeout(() => {\r\n        loader.value = false\r\n        router.push('/painel')\r\n      },900)\r\n\r\n      const token = {\r\n        id: gmailUser.id,\r\n        nome: nomeUser.nome,\r\n        gmail: gmailUser.gmail,\r\n        senha: senhaUser.senha,\r\n        tokenOn: true\r\n      }\r\n\r\n      store.commit('addToken',token)\r\n    }else {\r\n      alertPopupPanel('Conta não encontrada!')\r\n    }\r\n  }else {\r\n    ErrorInputs(gmail.value,senha.value)\r\n  }\r\n}\r\n\r\n// Loader\r\n\r\nlet loader = ref(false)\r\n\r\n// Popups\r\n\r\nlet stateErrorInputGmail = ref(false)\r\nlet stateErrorInputPassword = ref(false)\r\n\r\nconst ErrorInputs = (gmail,password) => {\r\n\r\n  if(gmail === '') {\r\n    stateErrorInputGmail.value = true\r\n  }\r\n\r\n  if(password === '') {\r\n    stateErrorInputPassword.value = true\r\n  }\r\n\r\n}\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  header {\r\n    height: 100vh;\r\n    background-color: #17191c;\r\n\r\n    form {\r\n      width: 100%;\r\n      max-width: 400px;\r\n      min-height: 300px;\r\n      background-color: #25272c;\r\n\r\n      input {\r\n        outline: none;\r\n        background-color: #17191c;\r\n      }\r\n\r\n      .link-registrar {\r\n        color: #959595;\r\n        font-size: 15px;\r\n\r\n        &:hover {\r\n          color: #949494;\r\n          text-decoration: underline !important;\r\n        }\r\n      }\r\n\r\n      .button-entrar {\r\n        background-color: #00b2ff;\r\n        color: white;\r\n        box-shadow: none;\r\n\r\n        &:hover {\r\n          box-shadow: 0 0 10px #0084ff65;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>","import script from \"./LoginView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=66a94ee6&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Documentos\\\\back\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-66a94ee6\"]])\n\nexport default __exports__"],"names":["AllUsers","ref","onMounted","async","onSnapshot","collection","db","snapshot","forEach","docUser","user","id","nome","data","gmail","senha","value","push","store","useStore","router","useRouter","logarUsuario","gmailValue","trim","senhaValue","verificarSeAContaExiste","find","gmailUser","item","senhaUser","nomeUser","loader","setTimeout","token","tokenOn","commit","alertPopupPanel","ErrorInputs","stateErrorInputGmail","stateErrorInputPassword","password","statePopupPanel","textPopupPanel","msg","__exports__"],"sourceRoot":""}