{"version":3,"file":"js/374.98bf9238.js","mappings":"moBAkFA,IAAIA,GAAWC,EAAAA,EAAAA,IAAI,KAEnBC,EAAAA,EAAAA,KAAUC,WACRC,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,aAAcC,IACtCA,EAASC,SAASC,IAChB,MAAMC,EAAO,CACXC,GAAIF,EAAQE,GACZC,KAAMH,EAAQI,OAAOD,KACrBE,MAAOL,EAAQI,OAAOC,MACtBC,MAAON,EAAQI,OAAOE,OAGxBf,EAASgB,MAAMC,KAAKP,EAAK,GACzB,GACF,IAGJ,IAAII,GAAQb,EAAAA,EAAAA,IAAI,IACZc,GAAQd,EAAAA,EAAAA,IAAI,IAEZiB,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAEb,MAAMC,EAAeA,KACnB,IAAIC,EAAaT,EAAME,MAAMQ,OACzBC,EAAaV,EAAMC,MAAMQ,OAE7B,GAAGE,EAAc,CAEf,IAAIC,EAA0B3B,EAASgB,MAAMY,MAAKlB,GAC7CA,EAAKI,QAAUS,GAAcb,EAAKK,QAAUU,IAM7CI,EAAY7B,EAASgB,MAAMY,MAAME,GAASA,EAAKhB,QAAUS,IACzDQ,EAAY/B,EAASgB,MAAMY,MAAME,GAASA,EAAKf,QAAUU,IACzDO,EAAWhC,EAASgB,MAAMY,MAAME,IAClC,GAAGA,EAAKhB,QAAUS,EAChB,OAAOO,EAAKlB,IAAI,IAGpB,GAAGe,EAAyB,CAC1BM,EAAOjB,OAAQ,EACfkB,YAAW,KACTD,EAAOjB,OAAQ,EACfI,EAAOH,KAAK,UAAU,GACtB,KAEF,MAAMkB,EAAQ,CACZxB,GAAIkB,EAAUlB,GACdC,KAAMoB,EAASpB,KACfE,MAAOe,EAAUf,MACjBC,MAAOgB,EAAUhB,MACjBqB,SAAS,GAGXlB,EAAMmB,OAAO,WAAWF,EAC1B,MACEG,EAAgB,wBAEpB,GAKF,IAAIL,GAAShC,EAAAA,EAAAA,KAAI,GAIbsC,GAAkBtC,EAAAA,EAAAA,KAAI,GACtBuC,GAAiBvC,EAAAA,EAAAA,IAAI,IAEzB,MAAMqC,EAAmBG,IACvBF,EAAgBvB,OAAQ,EACxBwB,EAAexB,MAAQyB,EAEvBP,YAAW,KACTK,EAAgBvB,OAAQ,CAAK,GAC7B,IAAK,EAKT,IAAI0B,GAAkBzC,EAAAA,EAAAA,KAAI,GACtB0C,GAAqB1C,EAAAA,EAAAA,KAAI,GAE7B,MAAM2C,EAAa,CACjB5B,GACKA,EACM0B,EAAgB1B,OAAQ,GAE/B0B,EAAgB1B,OAAQ,EACjB,sBAEXA,GACKA,EAAM6B,SAAS,OAAS7B,EAAM6B,SAAS,MAAmC,GAA3B7B,EAAM8B,MAAM,KAAKC,QAAgD,IAAjC/B,EAAM8B,MAAM,KAAKE,GAAG,GAAGxB,QAAiD,IAAjCR,EAAM8B,MAAM,KAAKE,GAAG,GAAGxB,OACvIkB,EAAgB1B,OAAQ,GAE/B0B,EAAgB1B,OAAQ,EACjB,mBAEXA,GACKA,EAAM+B,QAAU,GACVL,EAAgB1B,OAAQ,GAE/B0B,EAAgB1B,OAAQ,EACjB,0BAIPiC,EAAgB,CACpBjC,GACKA,EACM2B,EAAmB3B,OAAQ,GAElC2B,EAAmB3B,OAAQ,EACpB,sBAEXA,GACKA,EAAM+B,QAAU,EACVJ,EAAmB3B,OAAQ,GAEpC2B,EAAmB3B,OAAQ,EAClB,uBAEXA,GACiC,IAA5BA,EAAM8B,MAAM,KAAKC,OACXJ,EAAmB3B,OAAQ,GAEpC2B,EAAmB3B,OAAQ,EAClB,mBAEXA,GACKA,EAAM+B,QAAU,GACVJ,EAAmB3B,OAAQ,GAEpC2B,EAAmB3B,OAAQ,EAClB,yBAIPU,EAAeA,OAChBgB,EAAgB1B,QAAS2B,EAAmB3B,OAKjD,IAAIkC,GAAkBjD,EAAAA,EAAAA,M,y7DCjOtB,MAAMkD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://app/./src/views/auth/LoginView.vue","webpack://app/./src/views/auth/LoginView.vue?4511"],"sourcesContent":["<template>\r\n  <v-app theem=\"dark\">\r\n    <header class=\"d-flex justify-center align-center\">\r\n      <v-container class=\"d-flex justify-center align-center\">\r\n        <form class=\"elevation-10 rounded-lg py-3 px-4\">\r\n          <h1 class=\"text-white text-center mb-5\">Login</h1>\r\n          <div class=\"mb-2\">\r\n            <v-text-field\r\n              label=\"Email\"\r\n              v-model=\"gmail\"\r\n              class=\"text-white w-100 border-0 pa-2 rounded\"\r\n              type=\"email\"\r\n              placeholder=\"Seu email\"\r\n              prepend-inner-icon=\"mdi-email-outline\"\r\n              :rules=\"emailRules\"\r\n              variant=\"outlined\"\r\n            ></v-text-field>\r\n          </div>\r\n          <div class=\"mb-2\">\r\n            <v-text-field\r\n              label=\"Senha\"\r\n              v-model=\"senha\"\r\n              class=\"text-white w-100 border-0 pa-2 rounded\"\r\n              placeholder=\"Sua senha\"\r\n              :rules=\"passwordRules\"\r\n              prepend-inner-icon=\"mdi-lock-outline\"\r\n              @click:append-inner=\"visiblePassword = !visiblePassword\"\r\n              :append-inner-icon=\"visiblePassword ? 'mdi-eye-off' : 'mdi-eye'\"\r\n              :type=\"visiblePassword ? 'text' : 'password'\"\r\n              variant=\"outlined\"\r\n            ></v-text-field>\r\n          </div>\r\n          <v-btn\r\n          :disabled=\"loader\"\r\n          :loading=\"loader\"\r\n          @click=\"logarUsuario()\"\r\n          class=\"w-100 my-3 button-entrar\"\r\n          >Entrar</v-btn>\r\n          <div class=\"w-100 text-center\">\r\n            <router-link\r\n            class=\"link-registrar text-decoration-none font-weight-light\"\r\n            to=\"/auth/registrar\">Não tem uma conta?</router-link>\r\n          </div>\r\n        </form>\r\n      </v-container>\r\n    </header>\r\n    <v-dialog\r\n        v-model=\"loader\"\r\n        :scrim=\"false\"\r\n        persistent\r\n        width=\"auto\"\r\n      >\r\n        <v-card\r\n          color=\"blue-darken-1\"\r\n        >\r\n          <v-card-text>\r\n            Entrando\r\n            <v-progress-linear\r\n              indeterminate\r\n              color=\"white\"\r\n              class=\"mb-0\"\r\n            ></v-progress-linear>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-dialog>\r\n    <AlertPopupPanel\r\n      :statePopupPanel=\"statePopupPanel\"\r\n    >\r\n      {{ textPopupPanel }}\r\n    </AlertPopupPanel>\r\n  </v-app>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport { db } from '@/firebase'\r\nimport { collection, onSnapshot} from \"firebase/firestore\";\r\nimport { onMounted } from 'vue';\r\nimport AlertPopupPanel from '@/components/Popups/PanelPopups/AlertPopupPanel.vue';\r\n\r\nlet AllUsers = ref([])\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"usuarios\"), (snapshot) => {\r\n    snapshot.forEach((docUser) => {\r\n      const user = {\r\n        id: docUser.id,\r\n        nome: docUser.data().nome,\r\n        gmail: docUser.data().gmail,\r\n        senha: docUser.data().senha\r\n      }\r\n\r\n      AllUsers.value.push(user)\r\n    })\r\n  });\r\n})\r\n\r\nlet gmail = ref('')\r\nlet senha = ref('')\r\n\r\nlet store = useStore()\r\nlet router = useRouter()\r\n\r\nconst logarUsuario = () => {\r\n  let gmailValue = gmail.value.trim()\r\n  let senhaValue = senha.value.trim()\r\n\r\n  if(confirmRules) {\r\n\r\n    let verificarSeAContaExiste = AllUsers.value.find(user => {\r\n      if(user.gmail === gmailValue && user.senha === senhaValue) \r\n        return true\r\n\r\n      return false\r\n    })\r\n\r\n    let gmailUser = AllUsers.value.find((item) => item.gmail === gmailValue)\r\n    let senhaUser = AllUsers.value.find((item) => item.senha === senhaValue)\r\n    let nomeUser = AllUsers.value.find((item) => {\r\n      if(item.gmail === gmailValue)\r\n        return item.nome\r\n    })\r\n\r\n    if(verificarSeAContaExiste) {\r\n      loader.value = true\r\n      setTimeout(() => {\r\n        loader.value = false\r\n        router.push('/painel')\r\n      },900)\r\n\r\n      const token = {\r\n        id: gmailUser.id,\r\n        nome: nomeUser.nome,\r\n        gmail: gmailUser.gmail,\r\n        senha: senhaUser.senha,\r\n        tokenOn: true\r\n      }\r\n\r\n      store.commit('addToken',token)\r\n    }else {\r\n      alertPopupPanel('Conta não encontrada!')\r\n    }\r\n  }\r\n}\r\n\r\n// Loader\r\n\r\nlet loader = ref(false)\r\n\r\n// Popups\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\n// Rules login\r\n\r\nlet validationGmail = ref(false)\r\nlet validationPassword = ref(false)\r\n\r\nconst emailRules = [\r\n  value => {\r\n    if(value)\r\n      return validationGmail.value = true\r\n    else\r\n      validationGmail.value = false\r\n      return 'Email obrigatório!'\r\n  },\r\n  value => {\r\n    if(value.includes('@') && !value.includes(' ') && value.split('@').length == 2 && value.split('@').at(1).trim() != '' && value.split('@').at(0).trim() != '')\r\n      return validationGmail.value = true\r\n    else\r\n      validationGmail.value = false\r\n      return 'Email inválido!'\r\n  },\r\n  value => {\r\n    if(value.length <= 50)\r\n      return validationGmail.value = true\r\n    else\r\n      validationGmail.value = false\r\n      return 'Máximo 50 caracteres!'\r\n  }\r\n]\r\n\r\nconst passwordRules = [\r\n  value => {\r\n    if(value)\r\n      return validationPassword.value = true\r\n    else\r\n      validationPassword.value = false\r\n      return 'Senha obrigatória!'\r\n  },\r\n  value => {\r\n    if(value.length >= 8)\r\n      return validationPassword.value = true\r\n    else\r\n    validationPassword.value = false\r\n      return 'Minimo 8 caracteres'\r\n  },\r\n  value => {\r\n    if(value.split(' ').length === 1)\r\n      return validationPassword.value = true\r\n    else\r\n    validationPassword.value = false\r\n      return 'Senha inválida!'\r\n  },\r\n  value => {\r\n    if(value.length <= 50)\r\n      return validationPassword.value = true\r\n    else\r\n    validationPassword.value = false\r\n      return 'Máximo 50 caracteres'\r\n  }\r\n]\r\n\r\nconst confirmRules = () => {\r\n  if(validationGmail.value && validationPassword.value)\r\n    return true\r\n  return false\r\n}\r\n\r\nlet visiblePassword = ref()\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  header {\r\n    height: 100vh;\r\n    background-color: #17191c;\r\n\r\n    form {\r\n      width: 100%;\r\n      max-width: 400px;\r\n      min-height: 300px;\r\n      background-color: #25272c;\r\n\r\n      input {\r\n        outline: none;\r\n        background-color: #17191c;\r\n      }\r\n\r\n      .link-registrar {\r\n        color: #959595;\r\n        font-size: 15px;\r\n\r\n        &:hover {\r\n          color: #949494;\r\n          text-decoration: underline !important;\r\n        }\r\n      }\r\n\r\n      .button-entrar {\r\n        background-color: #00b2ff;\r\n        color: white;\r\n        box-shadow: none;\r\n\r\n        &:hover {\r\n          box-shadow: 0 0 10px #0084ff65;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>","import script from \"./LoginView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=0bd77f36&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0bd77f36\"]])\n\nexport default __exports__"],"names":["AllUsers","ref","onMounted","async","onSnapshot","collection","db","snapshot","forEach","docUser","user","id","nome","data","gmail","senha","value","push","store","useStore","router","useRouter","logarUsuario","gmailValue","trim","senhaValue","confirmRules","verificarSeAContaExiste","find","gmailUser","item","senhaUser","nomeUser","loader","setTimeout","token","tokenOn","commit","alertPopupPanel","statePopupPanel","textPopupPanel","msg","validationGmail","validationPassword","emailRules","includes","split","length","at","passwordRules","visiblePassword","__exports__"],"sourceRoot":""}