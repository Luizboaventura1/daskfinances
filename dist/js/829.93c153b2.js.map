{"version":3,"file":"js/829.93c153b2.js","mappings":"+lBAsGA,MAAMA,GAAQC,EAAAA,EAAAA,MAEd,IAAIC,GAAWC,EAAAA,EAAAA,IAAI,KAEnBC,EAAAA,EAAAA,KAAUC,WACRC,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,aAAcC,IACtCA,EAASC,SAASC,IAChB,MAAMC,EAAM,CACVC,GAAIF,EAAKE,GACTC,KAAMH,EAAKI,OAAOD,KAClBE,MAAOL,EAAKI,OAAOC,MACnBC,MAAON,EAAKI,OAAOE,OAGrBf,EAASgB,MAAMC,KAAKP,EAAI,GACxB,GACF,IAGJ,IAAIE,GAAOX,EAAAA,EAAAA,IAAI,IACXa,GAAQb,EAAAA,EAAAA,IAAI,IACZc,GAAQd,EAAAA,EAAAA,IAAI,IAEZiB,GAASC,EAAAA,EAAAA,MAEb,MAAMC,EAAmBA,KACvB,IAAIC,EAAYT,EAAKI,MAAMM,OACvBC,EAAaT,EAAME,MAAMM,OACzBE,EAAaT,EAAMC,MAAMM,OAE7B,GAAGG,IAAgB,CACjB,IAAIC,EAA0B1B,EAASgB,MAAMW,MAAKlB,GAAQA,EAAKK,MAAMc,WAAWL,KAE5EG,EAsBFG,EAAgB,0BArBhBC,EAAOd,OAAQ,EACfe,YAAW,KACTD,EAAOd,OAAQ,EACfE,EAAOD,KAAK,UAAU,GACtB,MAEFe,EAAAA,EAAAA,KAAO3B,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,YAAa,CACjCM,KAAMS,EACNP,MAAOS,EACPR,MAAOS,IAGT1B,EAAMmC,OAAO,WAAW,CACtBtB,GAAI,GACJC,KAAMS,EACNP,MAAOS,EACPR,MAAOS,EACPU,SAAS,IAMf,GAKF,IAAIJ,GAAS7B,EAAAA,EAAAA,KAAI,GAIbkC,GAAkBlC,EAAAA,EAAAA,KAAI,GACtBmC,GAAiBnC,EAAAA,EAAAA,IAAI,IAEzB,MAAM4B,EAAmBQ,IACvBF,EAAgBnB,OAAQ,EACxBoB,EAAepB,MAAQqB,EAEvBN,YAAW,KACTI,EAAgBnB,OAAQ,CAAK,GAC7B,IAAK,EAKT,IAAIsB,GAAiBrC,EAAAA,EAAAA,KAAI,GACrBsC,GAAkBtC,EAAAA,EAAAA,KAAI,GACtBuC,GAAqBvC,EAAAA,EAAAA,KAAI,GAE7B,MAAMwC,EAAY,CAChBzB,GACKA,EACMsB,EAAetB,OAAQ,GAE9BsB,EAAetB,OAAQ,EAChB,sBAEXA,GACKA,EAAM0B,QAAU,EACVJ,EAAetB,OAAQ,GAE9BsB,EAAetB,OAAQ,EAChB,mBAEXA,GACKA,EAAM0B,QAAU,GACVJ,EAAetB,OAAQ,GAE9BsB,EAAetB,OAAQ,EAChB,0BAIP2B,EAAa,CACjB3B,GACKA,EACMuB,EAAgBvB,OAAQ,GAE/BuB,EAAgBvB,OAAQ,EACjB,sBAEXA,GACKA,EAAM4B,SAAS,OAAS5B,EAAM4B,SAAS,MAAmC,GAA3B5B,EAAM6B,MAAM,KAAKH,QAA6C,IAA9B1B,EAAM6B,MAAM,KAAK,GAAGvB,QAA8C,IAA9BN,EAAM6B,MAAM,KAAK,GAAGvB,OACjIiB,EAAgBvB,OAAQ,GAE/BuB,EAAgBvB,OAAQ,EACxB8B,QAAQC,IAAI/B,EAAM6B,MAAM,KAAKH,QACtB,mBAEX1B,GACKA,EAAM0B,QAAU,GACVH,EAAgBvB,OAAQ,GAE/BuB,EAAgBvB,OAAQ,EACjB,0BAIPgC,EAAgB,CACpBhC,GACKA,EACMwB,EAAmBxB,OAAQ,GAElCwB,EAAmBxB,OAAQ,EACpB,sBAEXA,GACKA,EAAM0B,QAAU,EACVF,EAAmBxB,OAAQ,GAEpCwB,EAAmBxB,OAAQ,EAClB,uBAEXA,GACiC,IAA5BA,EAAM6B,MAAM,KAAKH,OACXF,EAAmBxB,OAAQ,GAEpCwB,EAAmBxB,OAAQ,EAClB,mBAEXA,GACKA,EAAM0B,QAAU,GACVF,EAAmBxB,OAAQ,GAEpCwB,EAAmBxB,OAAQ,EAClB,yBAIPS,EAAeA,OAChBa,EAAetB,OAASuB,EAAgBvB,OAASwB,EAAmBxB,OAMzE,IAAIiC,GAAkBhD,EAAAA,EAAAA,M,gwEC3QtB,MAAMiD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://app/./src/views/auth/RegistrarView.vue","webpack://app/./src/views/auth/RegistrarView.vue?a42a"],"sourcesContent":["<template>\r\n  <header class=\"d-flex justify-center align-center\">\r\n    <v-container class=\"d-flex justify-center align-center\">\r\n      <form class=\"elevation-10 rounded-lg py-3 px-4\">\r\n        <h1 class=\"text-white text-center mb-5\">Registrar</h1>\r\n\r\n        <div>\r\n          <v-text-field\r\n            required\r\n            label=\"Nome\"\r\n            v-model=\"nome\"\r\n            class=\"text-white w-100 border-0 pa-2 rounded\"\r\n            type=\"email\"\r\n            placeholder=\"Primeiro nome\"\r\n            :rules=\"nameRules\"\r\n            prepend-inner-icon=\"mdi-account-outline\"\r\n            variant=\"outlined\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <div>\r\n          <v-text-field\r\n            label=\"Email\"\r\n            required\r\n            v-model=\"gmail\"\r\n            class=\"text-white w-100 border-0 pa-2 rounded\"\r\n            type=\"email\"\r\n            placeholder=\"Seu email\"\r\n            :rules=\"emailRules\"\r\n            prepend-inner-icon=\"mdi-email-outline\"\r\n            variant=\"outlined\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <div>\r\n          <v-text-field\r\n            label=\"Senha\"\r\n            required\r\n            v-model=\"senha\"\r\n            class=\"text-white w-100 border-0 pa-2 rounded\"\r\n            placeholder=\"Sua senha\"\r\n            :rules=\"passwordRules\"\r\n            prepend-inner-icon=\"mdi-lock-outline\"\r\n            @click:append-inner=\"visiblePassword = !visiblePassword\"\r\n            :append-inner-icon=\"visiblePassword ? 'mdi-eye-off' : 'mdi-eye'\"\r\n            :type=\"visiblePassword ? 'text' : 'password'\"\r\n            variant=\"outlined\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <v-btn\r\n        :disabled=\"loader\"\r\n        :loading=\"loader\"\r\n        @click=\"registrarUsuario()\"\r\n        class=\"w-100 my-3 button-registrar\"\r\n        >Criar conta</v-btn>\r\n\r\n        <div class=\"w-100 text-center\">\r\n          <router-link\r\n          class=\"link-registrar text-decoration-none font-weight-light\"\r\n          to=\"/auth/login\">Tem uma conta?</router-link>\r\n        </div>\r\n      </form>\r\n    </v-container>\r\n  </header>\r\n\r\n  <v-dialog\r\n      v-model=\"loader\"\r\n      :scrim=\"false\"\r\n      persistent\r\n      width=\"auto\"\r\n    >\r\n      <v-card\r\n        color=\"blue-darken-1\"\r\n      >\r\n        <v-card-text>\r\n          Registrando\r\n          <v-progress-linear\r\n            indeterminate\r\n            color=\"white\"\r\n            class=\"mb-0\"\r\n          ></v-progress-linear>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-dialog>\r\n  <AlertPopupPanel\r\n    :statePopupPanel=\"statePopupPanel\"\r\n  >\r\n    {{ textPopupPanel }}\r\n  </AlertPopupPanel>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { db } from '@/firebase'\r\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\r\nimport { useRouter } from 'vue-router';\r\nimport { onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport AlertPopupPanel from '@/components/Popups/PanelPopups/AlertPopupPanel.vue';\r\n\r\n\r\nconst store = useStore()\r\n\r\nlet AllUsers = ref([])\r\n\r\nonMounted(async () => {\r\n  onSnapshot(collection(db, \"usuarios\"), (snapshot) => {\r\n    snapshot.forEach((user) => {\r\n      const obj = {\r\n        id: user.id,\r\n        nome: user.data().nome,\r\n        gmail: user.data().gmail,\r\n        senha: user.data().senha\r\n      }\r\n\r\n      AllUsers.value.push(obj)\r\n    })\r\n  });\r\n})\r\n\r\nlet nome = ref('')\r\nlet gmail = ref('')\r\nlet senha = ref('')\r\n\r\nlet router = useRouter()\r\n\r\nconst registrarUsuario = () => {\r\n  let nomeValue = nome.value.trim()\r\n  let gmailValue = gmail.value.trim()\r\n  let senhaValue = senha.value.trim()\r\n\r\n  if(confirmRules()) {\r\n    let verificarSeAContaExiste = AllUsers.value.some(user => user.gmail.startsWith(gmailValue))\r\n    \r\n    if(!verificarSeAContaExiste) {\r\n      loader.value = true\r\n      setTimeout(() => {\r\n        loader.value = false\r\n        router.push('/painel')\r\n      },900)\r\n      \r\n      addDoc(collection(db, \"usuarios\"), {\r\n        nome: nomeValue,\r\n        gmail: gmailValue,\r\n        senha: senhaValue\r\n      });\r\n\r\n      store.commit('addToken',{\r\n        id: '',\r\n        nome: nomeValue,\r\n        gmail: gmailValue,\r\n        senha: senhaValue,\r\n        tokenOn: true\r\n      })\r\n\r\n    }else {\r\n      alertPopupPanel('Essa conta já existe!')\r\n    }\r\n  }\r\n}\r\n\r\n// Loader\r\n\r\nlet loader = ref(false)\r\n\r\n// Popups\r\n\r\nlet statePopupPanel = ref(false)\r\nlet textPopupPanel = ref('')\r\n\r\nconst alertPopupPanel = (msg) => {\r\n  statePopupPanel.value = true\r\n  textPopupPanel.value = msg\r\n\r\n  setTimeout(() => {\r\n    statePopupPanel.value = false\r\n  },2000)\r\n}\r\n\r\n// Rules login\r\n\r\nlet validationName = ref(false)\r\nlet validationGmail = ref(false)\r\nlet validationPassword = ref(false)\r\n\r\nconst nameRules = [\r\n  value => {\r\n    if(value) \r\n      return validationName.value = true\r\n    else \r\n      validationName.value = false\r\n      return 'Senha obrigatória!'\r\n  },\r\n  value => {\r\n    if(value.length >= 3) \r\n      return validationName.value = true\r\n    else \r\n      validationName.value = false\r\n      return 'Mínimo 3 letras'\r\n  },\r\n  value => {\r\n    if(value.length <= 50) \r\n      return validationName.value = true\r\n    else \r\n      validationName.value = false\r\n      return 'Máximo 50 caracteres!'\r\n  }\r\n]\r\n\r\nconst emailRules = [\r\n  value => {\r\n    if(value)\r\n      return validationGmail.value = true\r\n    else\r\n      validationGmail.value = false\r\n      return 'Email obrigatório!'\r\n  },\r\n  value => {\r\n    if(value.includes('@') && !value.includes(' ') && value.split('@').length == 2 && value.split('@')[1].trim() != '' && value.split('@')[0].trim() != '')\r\n      return validationGmail.value = true\r\n    else\r\n      validationGmail.value = false\r\n      console.log(value.split('@').length)\r\n      return 'Email inválido!'\r\n  },\r\n  value => {\r\n    if(value.length <= 50)\r\n      return validationGmail.value = true\r\n    else\r\n      validationGmail.value = false\r\n      return 'Máximo 50 caracteres!'\r\n  }\r\n]\r\n\r\nconst passwordRules = [\r\n  value => {\r\n    if(value)\r\n      return validationPassword.value = true\r\n    else\r\n      validationPassword.value = false\r\n      return 'Senha obrigatória!'\r\n  },\r\n  value => {\r\n    if(value.length >= 8)\r\n      return validationPassword.value = true\r\n    else\r\n    validationPassword.value = false\r\n      return 'Mínimo 8 caracteres'\r\n  },\r\n  value => {\r\n    if(value.split(' ').length === 1)\r\n      return validationPassword.value = true\r\n    else\r\n    validationPassword.value = false\r\n      return 'Senha inválida!'\r\n  },\r\n  value => {\r\n    if(value.length <= 50)\r\n      return validationPassword.value = true\r\n    else\r\n    validationPassword.value = false\r\n      return 'Máximo 50 caracteres'\r\n  }\r\n]\r\n\r\nconst confirmRules = () => {\r\n  if(validationName.value && validationGmail.value && validationPassword.value)\r\n    return true\r\n  return false\r\n}\r\n\r\n\r\nlet visiblePassword = ref()\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n  header {\r\n    height: 100vh;\r\n    background-color: #17191c;\r\n\r\n    form {\r\n      width: 100%;\r\n      max-width: 400px;\r\n      min-height: 350px;\r\n      background-color: #25272c;\r\n\r\n      input {\r\n        outline: none;\r\n        background-color: #17191c;\r\n      }\r\n\r\n      .link-registrar {\r\n        color: #959595;\r\n        font-size: 15px;\r\n\r\n        &:hover {\r\n          color: #949494;\r\n          text-decoration: underline !important;\r\n        }\r\n      }\r\n\r\n      .button-registrar {\r\n        background-color: #00b2ff;\r\n        color: white;\r\n        box-shadow: none;\r\n\r\n        &:hover {\r\n          box-shadow: 0 0 10px #0084ff65;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>","import script from \"./RegistrarView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RegistrarView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RegistrarView.vue?vue&type=style&index=0&id=0b0b944a&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\PC\\\\Documents\\\\GitHub\\\\daskfinances\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0b0b944a\"]])\n\nexport default __exports__"],"names":["store","useStore","AllUsers","ref","onMounted","async","onSnapshot","collection","db","snapshot","forEach","user","obj","id","nome","data","gmail","senha","value","push","router","useRouter","registrarUsuario","nomeValue","trim","gmailValue","senhaValue","confirmRules","verificarSeAContaExiste","some","startsWith","alertPopupPanel","loader","setTimeout","addDoc","commit","tokenOn","statePopupPanel","textPopupPanel","msg","validationName","validationGmail","validationPassword","nameRules","length","emailRules","includes","split","console","log","passwordRules","visiblePassword","__exports__"],"sourceRoot":""}